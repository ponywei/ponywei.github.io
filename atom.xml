<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HelloPony</title>
  <subtitle>Why so Serious?</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hellopony.cn/"/>
  <updated>2018-02-04T07:55:00.537Z</updated>
  <id>http://hellopony.cn/</id>
  
  <author>
    <name>PONY WEI</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何构建一个Media App</title>
    <link href="http://hellopony.cn/2018/02/04/Media%20Session/"/>
    <id>http://hellopony.cn/2018/02/04/Media Session/</id>
    <published>2018-02-04T07:55:13.090Z</published>
    <updated>2018-02-04T07:55:00.537Z</updated>
    
    <content type="html">&lt;p&gt;在Android系统中构建一个具有多媒体功能的App，如果是使用系统的Media Player，那么就需要了解Android系统对Media的处理流程，会有很多的细节需要开发者关注，比如播放器的各种状态，物理按键的响应等。本文主要是对Android开发者网站API Guide中“Media Apps”章节内容的翻译以及部分个人的理解。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Media_APP_概览&quot;&gt;Media APP 概览&lt;/h2&gt;&lt;h3 id=&quot;Player_和_UI&quot;&gt;Player 和 UI&lt;/h3&gt;&lt;p&gt;一个播放音视频的多媒体App通常包含两个部分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;加载数字信息并呈现为音视频的播放器（player）；&lt;/li&gt;
&lt;li&gt;展示播放器状态和控制播放器控件的UI&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://7u2h4k.com1.z0.glb.clouddn.com/15021978062336.png&quot; alt=&quot;Multimedia APP&quot;&gt;&lt;br&gt;在Android中，可以选择系统提供的MediaPlayer，也可以使用其它第三方开源库如ExoPlayer来实现一个播放器。&lt;/p&gt;
&lt;h3 id=&quot;MediaSession_和_MediaController&quot;&gt;MediaSession 和 MediaController&lt;/h3&gt;&lt;p&gt;UI的API和Player是相互独立的，两者之间的交互是所有多媒体App的本质；Android提供两个类：MediaSession 和 MediaController来支持这种结构。&lt;br&gt;MediaSession 和 MediaController之间通过定义的的和标准播放操作（play,pause,stop,etc.）相符合的callbacks来进行通信，也可以扩展出自定义的call来实现独特功能的app：&lt;br&gt;&lt;img src=&quot;http://7u2h4k.com1.z0.glb.clouddn.com/15021984113212.png&quot; alt=&quot;MediaSession and MediaController&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;Media_Session&quot;&gt;Media Session&lt;/h4&gt;&lt;p&gt;Media Session负责与Player通信，对app的其它部分隐藏Player的操作，Player也只接受Media Session的控制。它管理着player当前播放的状态和具体信息。一个Media Session可以同时接收到多个Media Controller的callbacks，这也就是说为什么player可以被app的UI控制，也可以同时被其它运行Android Wear和Auto的设备控制。&lt;/p&gt;
&lt;h4 id=&quot;Media_Controller&quot;&gt;Media Controller&lt;/h4&gt;&lt;p&gt;App的UI只与Media Controller进行通信，它把控件操作（transport controls actions）转换成Media Session的callbacks，也可以在Media Session状态改变时接收session的callbacks，这就有了一个机制来保证关联UI自动更新。一个Media Controller一次只能连接到一个Media Session。&lt;/p&gt;
&lt;h2 id=&quot;Media_Session-1&quot;&gt;Media Session&lt;/h2&gt;&lt;h3 id=&quot;初始化&quot;&gt;初始化&lt;/h3&gt;&lt;p&gt;一个新创建的MediaSession必须要进行以下步骤的初始化工作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设置flags，使得MediaSession可以接受Media Controllers和Media buttons的Callbacks；&lt;/li&gt;
&lt;li&gt;创建并初始化一个&lt;code&gt;PlaybackStateCompat&lt;/code&gt;的实例赋值给Session。播放状态的改变遍布Session，建议使用&lt;code&gt;PlaybackStateCompat.Builder&lt;/code&gt;来复用；&lt;/li&gt;
&lt;li&gt;创建一个&lt;code&gt;MediaSessionCompat.Callback&lt;/code&gt;的实例赋值给Session。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Media Session的创建和初始化工作应该在Activity或Service的&lt;code&gt;onCreate()&lt;/code&gt;中进行。为了是media buttons在新启动（或者被停止）的app中能够起作用，&lt;code&gt;PlaybackState&lt;/code&gt;必须在初始化的时候就包含&lt;code&gt;ACTION_PLAY&lt;/code&gt;，这样才能匹配media buttons发送的Intent。（更多关于Media Button参见&lt;a href=&quot;https://developer.android.google.cn/guide/topics/media-apps/mediabuttons.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Responding to Media Buttons&lt;/a&gt;）&lt;/p&gt;
&lt;h3 id=&quot;维护播放状态（Playback_State）和元数据（metadata）&quot;&gt;维护播放状态（Playback State）和元数据（metadata）&lt;/h3&gt;&lt;p&gt;两个类可以代表media session的状态：&lt;br&gt;1.&lt;code&gt;PlaybackStateCompat&lt;/code&gt;描述了当前player的运行状态，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;transport state（player是playing/paused/buffering，等）&lt;/li&gt;
&lt;li&gt;player position&lt;/li&gt;
&lt;li&gt;当前状态可以处理的有效的controller actions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2.&lt;code&gt;MediaMetadataCompat&lt;/code&gt;代表了当前正在播放的内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;艺术家&amp;amp;专辑&amp;amp;音轨 的名字&lt;/li&gt;
&lt;li&gt;音轨时长&lt;/li&gt;
&lt;li&gt;用于锁屏显示的专辑封面，最大320x320dp的bitmap&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每当Playback state或者Metadata发生改变，都必须创建新的&lt;code&gt;PlaybackStateCompat.Builder()&lt;/code&gt;或&lt;code&gt;MediaMetadataCompat.Builder()&lt;/code&gt;实例，通过调用&lt;code&gt;setPlaybackState()&lt;/code&gt;或者&lt;code&gt;setMetaData()&lt;/code&gt;传递给Media session。为了在频繁操作的情况下减少内存的消耗，建议创建全局的builder对象，在整个media session中重用builder对象。&lt;/p&gt;
&lt;h3 id=&quot;锁屏下的Media_Session&quot;&gt;锁屏下的Media Session&lt;/h3&gt;&lt;p&gt;从4.0（API 14）开始系统便可以访问一个media session的playback state和metadata，这也是为什么锁屏状态下可以显示当前播放的封面（Artwork）和控制器（Transport controls）。&lt;br&gt;在4.0及以上版本，如果metadata中包含这个专辑的artwork bitmap，就会会显示在锁屏状态的整个屏幕背景上；&lt;br&gt;在4.0（API 14）到4.4（API 19），当media session是活动状态且有artwork，那么同时也会自动显示Transport controls；而在5.0（API 21）及以上版本默认不再锁屏显示transport controls，需要使用&lt;a href=&quot;https://developer.android.google.cn/guide/topics/media-apps/audio-app/building-a-mediabrowserservice.html#mediastyle-notifications&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MediaStyle notification&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;Media_session_callbacks&quot;&gt;Media session callbacks&lt;/h3&gt;&lt;p&gt;Media session callback的主要方法是onPlay(), onPause(), and onStop()，在这些方法里添加控制Player的方法。&lt;br&gt;除了控制player和管理session状态切换，callbacks也起着控制app与其它app和设备硬件交互方式的作用。（参见&lt;a href=&quot;https://developer.android.google.cn/guide/topics/media-apps/volume-and-earphones.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Handling Changes in Audio Output&lt;/a&gt;）&lt;/p&gt;
&lt;h2 id=&quot;创建一个Audio_APP&quot;&gt;创建一个Audio APP&lt;/h2&gt;&lt;p&gt;一个音频app适用于典型的C/S架构。如下图：&lt;br&gt;&lt;img src=&quot;http://7u2h4k.com1.z0.glb.clouddn.com/15019227170401.png&quot; alt=&quot;Audio app C/S&quot;&gt;&lt;br&gt;&lt;code&gt;MediaBrowserService&lt;/code&gt;在这里有两个特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当你使用MediaBrowserService，其它包含&lt;code&gt;MediaBrowser&lt;/code&gt;的组件和应用都可以发现你的Service，创建它们自己的Controller，连接到你app的Media Session，然后控制Player。这也是Android Wear和Auto App获取访问Media App的方式。（补充：这也是为什么连接服务需要&lt;code&gt;onGetRoot&lt;/code&gt;方法鉴定权限！）&lt;/li&gt;
&lt;li&gt;提供可选的Browsing API，使得client方可以访问Service然后创建自己的内容结构，可以是一个播放列表，也可以是一个媒体库或者精选集等（补充：这也即是&lt;code&gt;onLoadChildren&lt;/code&gt;方法的作用）。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Note：这里所指的MediaBrowserService和MediaBrowser在实现过程中推荐使用MediaBrowserServiceCompat和MediaBrowserCompat；MediaSession推荐使用MediaSessionCompat。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;创建Media_Browser_Service&quot;&gt;创建Media Browser Service&lt;/h3&gt;&lt;p&gt;创建自己Service第一步是要新建一个类extends MediaBrowserServiceCompat，然后在APP的manifest中声明你自己的MediaBrowserService，必须包含一个特定的intent-filter。&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;.MediaPlaybackService&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;android.media.browse.MediaBrowserService&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;service&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;初始化Media_Session&quot;&gt;初始化Media Session&lt;/h4&gt;&lt;p&gt;在Service的onCreate()生命周期方法里需要完成以下工作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建并初始化MediaSession&lt;/li&gt;
&lt;li&gt;设置MediaSession Callback&lt;/li&gt;
&lt;li&gt;设置MediaSession token&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MediaPlaybackService&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MediaBrowserServiceCompat&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; MediaSessionCompat mMediaSession;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; PlaybackStateCompat.Builder mStateBuilder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Create a MediaSessionCompat&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMediaSession = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaSessionCompat(context, LOG_TAG);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Enable callbacks from MediaButtons and TransportControls&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMediaSession.setFlags(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      MediaSessionCompat.FLAG_HANDLES_MEDIA_BUTTONS |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      MediaSessionCompat.FLAG_HANDLES_TRANSPORT_CONTROLS);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Set an initial PlaybackState with ACTION_PLAY, so media buttons can start the player&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStateBuilder = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PlaybackStateCompat.Builder()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    .setActions(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        PlaybackStateCompat.ACTION_PLAY |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        PlaybackStateCompat.ACTION_PLAY_PAUSE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMediaSession.setPlaybackState(mStateBuilder.build());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// MySessionCallback() has methods that handle callbacks from a media controller&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMediaSession.setCallback(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MySessionCallback());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Set the session&#39;s token so that client activities can communicate with it.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setSessionToken(mMediaSession.getSessionToken());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;管理client连接&quot;&gt;管理client连接&lt;/h4&gt;&lt;p&gt;MediaBrowserServiceCompat有两个方法：&lt;code&gt;onGetRoot()&lt;/code&gt;控制service的访问；&lt;code&gt;onLoadChildren()&lt;/code&gt;给client提供内容。&lt;/p&gt;
&lt;h5 id=&quot;通过onGetRoot()控制Client访问&quot;&gt;通过onGetRoot()控制Client访问&lt;/h5&gt;&lt;p&gt;该方法返回值（&lt;code&gt;BrowserRoot(@NonNull String rootId, @Nullable Bundle extras)&lt;/code&gt;）为内容结构的根节点（root node of content hierarchy），如果返回null为拒绝访问。&lt;br&gt;如果要允许所有的clients访问service及获取内容，这里始终应该返回一个非空的、带有root ID的BrowserRoot；如果要仅允许连接service，不允许浏览内容，那么返回一个非空、但root ID为空的BrowserRoot。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; BrowserRoot &lt;span class=&quot;title&quot;&gt;onGetRoot&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String clientPackageName, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; clientUid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Bundle rootHints)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// (Optional) Control the level of access for the specified package name.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// You&#39;ll need to write your own logic to do this.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (allowBrowsing(clientPackageName, clientUid)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// Returns a root ID, so clients can use onLoadChildren() to retrieve the content hierarchy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BrowserRoot(MY_MEDIA_ROOT_ID, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// Clients can connect, but since the BrowserRoot is an empty string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// onLoadChildren will return nothing. This disables the ability to browse for content.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BrowserRoot(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;通过onLoadChildren()获取内容&quot;&gt;通过onLoadChildren()获取内容&lt;/h5&gt;&lt;p&gt;client连接service成功之后就可以通过（可重复）调用&lt;code&gt;MediaBrowserCompat.subscribe()&lt;/code&gt;来获取内容结构，进而展示到UI上。MediaBrowser的subscribe方法调用对应service的回调方onLoadChildren响应，得到一个&lt;code&gt;MediaBrowser.MediaItem&lt;/code&gt;对象的列表。&lt;br&gt;每一个MeidaItem都有个唯一的ID（Demo中的id是通过对media的source uri进行hashcode得到的，现实中这个id可能是取自服务器方），当client想要打开或者播放一个item时会传入ID，service负责根据ID来取得对应的Item。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onLoadChildren&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String parentMediaId,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Result&amp;lt;List&amp;lt;MediaItem&amp;gt;&amp;gt; result)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//  Browsing not allowed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (TextUtils.isEmpty(parentMediaId)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   result.sendResult(&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// Assume for example that the music catalog is already loaded/cached.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  List&amp;lt;MediaItem&amp;gt; mediaItems = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// Check if this is the root menu:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (MY_MEDIA_ROOT_ID.equals(parentMediaId)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// build the MediaItem objects for the top level,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// and put them in the mediaItems list&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// examine the passed parentMediaId to see which submenu we&#39;re at,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// and put the children of that menu in the mediaItems list&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  result.sendResult(mediaItems);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Note：通过MediaBrowserService传递的MediaItem不应该直接包含icon bitmap，应该使用MediaDescription的setIconUri()来设置图片的Uri，使用到的时候再根据Uri去获取。&lt;/p&gt;
&lt;h4 id=&quot;Media_Browser_Service生命周期&quot;&gt;Media Browser Service生命周期&lt;/h4&gt;&lt;p&gt;Android Service的行为表现取决于他是被启动（started）或者绑定到一个或多个客户端（bounded to one or more clients）。当一个Service被创建后，它可以被start，也可以bound，不管何种方式Service的具体任务不受影响，区别仅在于这个service可以存活多久。绑定的服务直到它所绑定的最后一个client被销毁之后才会被自动销毁，而启动的服务可以被显示的停止和销毁。&lt;br&gt;当一个运行在其它Activity中的MediaBrowser连接到MediaBrowserService时，即绑定了该Activity和Service，Service处于被绑定状态。这是集成在MediaBrowserServiceCompat中的默认操作。&lt;br&gt;一个仅仅处于被绑定状态是Service会在所有clients取消绑定后自动销毁。此例中UI activity 断开连接Service就会被销毁。在Audio App中，这显然不合理。用户期望可以一直听到音乐，无论是当前正在使用哪个app，activity有没有被回收。这就要求即使UI取消绑定，Service仍然不会被销毁，player还可以播放。&lt;br&gt;为此，需要在开始play之前，调用&lt;code&gt;startService()&lt;/code&gt;来确保Service被启动。一个被启动的Service必须被显示的停止（无论是否存在绑定）。&lt;br&gt;可以调用&lt;code&gt;Context.stopService()&lt;/code&gt;或&lt;code&gt;stopSelf()&lt;/code&gt;来停止一个启动的service，系统会尽快的停止并回收它。如果仍然有client绑定这个service，停止和回收会被延迟到client取消绑定之后。&lt;br&gt;MediaBrowserService的生命周期取决于创建它的方式、绑定clients的数量，以及它所接收到的MediaSession callback。总结为以下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当为了响应Media button操作而启动，或者一个Activity绑定请求发生时，Service会被创建。&lt;/li&gt;
&lt;li&gt;Media Session 的callback方法&lt;code&gt;onPlay()&lt;/code&gt;中应该包含&lt;code&gt;startService()&lt;/code&gt;，这样才能确保Service可以在所有的UI MediaBrowser activities取消绑定之后依然在存活。&lt;/li&gt;
&lt;li&gt;Media Session 的callback方法&lt;code&gt;onStop()&lt;/code&gt;中应该调用&lt;code&gt;stopSelf()&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面的图片展示了整个Service的生命周期（counter变量用来记录绑定数）：&lt;br&gt;&lt;img src=&quot;http://7u2h4k.com1.z0.glb.clouddn.com/15019310141694.png&quot; alt=&quot;Service lifecycle flowchart&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;在Foreground_Service中使用MediaStyle_notifications&quot;&gt;在Foreground Service中使用MediaStyle notifications&lt;/h4&gt;&lt;p&gt;首先解释一下Foreground Service。这里的Foreground是特殊意义的”前台”，是Android系统为了进程管理的目的把这个Service视为Foreground，而不是对于用户而言的屏幕可见的foreground（实际上Service始终都是工作在后台）。音乐Service正在播放，那么就应该是运行在foreground，系统就会知道当前service正在执行任务，就不会在内存紧张的时候结束服务。&lt;br&gt;当Service运行在foreground，就必须展示一个notification，最好还能有几个控制按钮，当然也应该展示Media Session metadata的一些基本信息。&lt;br&gt;在Player开始播放的时候创建并展示一条通知，最合适的位置就是在&lt;code&gt;MediaSessionCompat.Callback.onPlay()&lt;/code&gt;方法里。&lt;br&gt;下面的示例代码展示了如何使用为Media App量身设计的&lt;code&gt;NotificationCompat.MediaStyle&lt;/code&gt;，创建并展示metadata和控制按钮。使用&lt;code&gt;getController()&lt;/code&gt;方法可以直接从media session中创建一个media controller对象。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Given a media session and its context (usually the component containing the session)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Create a NotificationCompat.Builder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Get the session&#39;s metadata&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MediaControllerCompat controller = mediaSession.getController();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MediaMetadataCompat mediaMetadata = controller.getMetadata();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MediaDescriptionCompat description = mediaMetadata.getDescription();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NotificationCompat.Builder builder = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; NotificationCompat.Builder(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;builder&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Add the metadata for the currently playing track&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .setContentTitle(description.getTitle())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .setContentText(description.getSubtitle())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .setSubText(description.getDescription())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .setLargeIcon(description.getIconBitmap())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Enable launching the player by clicking the notification&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .setContentIntent(controller.getSessionActivity())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Stop the service when the notification is swiped away&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .setDeleteIntent(MediaButtonReceiver.buildMediaButtonPendingIntent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       PlaybackStateCompat.ACTION_STOP))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Make the transport controls visible on the lockscreen&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .setVisibility(NotificationCompat.VISIBILITY_PUBLIC)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Add an app icon and set its accent color&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Be careful about the color&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .setSmallIcon(R.drawable.notification_icon)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .setColor(ContextCompat.getColor(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, R.color.primaryDark))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Add a pause button&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .addAction(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; NotificationCompat.Action(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          R.drawable.pause, getString(R.string.pause),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          MediaButtonReceiver.buildMediaButtonPendingIntent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              PlaybackStateCompat.ACTION_PLAY_PAUSE)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Take advantage of MediaStyle features&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .setStyle(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; NotificationCompat.MediaStyle()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .setMediaSession(mediaSession.getSessionToken())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .setShowActionsInCompactView(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Add a cancel button&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .setShowCancelButton(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .setCancelButtonIntent(MediaButtonReceiver.buildMediaButtonPendingIntent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          PlaybackStateCompat.ACTION_STOP));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Display the notification and place the service in the foreground&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;startForeground(id, builder.build());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（此处还有一些关于MediaStyle的详细介绍，不再展开，参见官方英文原文）&lt;/p&gt;
&lt;h3 id=&quot;创建Media_Browser_Client&quot;&gt;创建Media Browser Client&lt;/h3&gt;&lt;p&gt;为了完成这个C/S结构，还必须要有一个Activity UI，一个MediaController，以及MediaBrowser。MediaBrowser扮演了两个角色：连接MediaBrowserService，并在这个链接上为UI创建一个MediaController；说白了就是桥梁。&lt;/p&gt;
&lt;h4 id=&quot;连接MediaBrowserService&quot;&gt;连接MediaBrowserService&lt;/h4&gt;&lt;p&gt;在Activity创建的时候进行Service连接操作，这里有一些握手操作（Activity的生命周期Callback中）需要注意：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;onCreate()&lt;/code&gt;构造MediaBrowserCompat，传入定义的MediaBrowserService，以及MediaBrowserCompat.ConnectionCallback。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onStart()&lt;/code&gt;连接MediaBrowserService，这里也正是MediaBrowserCompat.ConnectionCallback魔法发生的地方：如果连接成功，&lt;code&gt;onConnected()&lt;/code&gt;回调中创建media controller，并将之关联到media session，连接UI controls与media controller，然后注册controller以收到media session callback回调。（魔法已内置，无需手动）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onStop()&lt;/code&gt;断开MediaBrowser连接，取消注册MediaController.Callback。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MediaPlayerActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; MediaBrowserCompat mMediaBrowser;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Create MediaBrowserServiceCompat&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMediaBrowser = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaBrowserCompat(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ComponentName(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, MediaPlaybackService.class),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mConnectionCallbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// optional Bundle&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onStart&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onStart();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMediaBrowser.connect();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onStop&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onStop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// (see &quot;stay in sync with the MediaSession&quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (MediaControllerCompat.getMediaController(MediaPlayerActivity.&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;) != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      MediaControllerCompat.getMediaController(MediaPlayerActivity.&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).unregisterCallback(controllerCallback);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMediaBrowser.disconnect();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Note：这里仅是已Activity做为UI来举例，具体实现中换成Fragment的逻辑与上述一致。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;定制MediaBrowserCompat-ConnectionCallback&quot;&gt;定制MediaBrowserCompat.ConnectionCallback&lt;/h4&gt;&lt;p&gt;Activity构造完MediaBrowserCompat之后，然后就需要创建一个ConnectionCallback的实例，在&lt;code&gt;onConnected()&lt;/code&gt;回调中获取Media Session的Token，并用这个token去创建MediaControllerCompat，然后用&lt;code&gt;MediaControllerCompat.setMediaController()&lt;/code&gt;来保存一个UI与controller的连接。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; MediaBrowserCompat.ConnectionCallback mConnectionCallbacks =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaBrowserCompat.ConnectionCallback() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onConnected&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// Get the token for the MediaSession&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      MediaSessionCompat.Token token = mMediaBrowser.getSessionToken();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// Create a MediaControllerCompat&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      MediaControllerCompat mediaController =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaControllerCompat(MediaPlayerActivity.&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// Context&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        token);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// Save the controller&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      MediaControllerCompat.setMediaController(MediaPlayerActivity.&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, mediaController);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// Finish building the UI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      buildTransportControls();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onConnectionSuspended&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// The Service has crashed. Disable transport controls until it automatically reconnects&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onConnectionFailed&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// The Service has refused our connection&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;连接UI与Media_controller&quot;&gt;连接UI与Media controller&lt;/h4&gt;&lt;p&gt;在UI上通过MediaControllerCompat.TransportControls 方法来控制controller。&lt;/p&gt;
&lt;h4 id=&quot;与Media_Session同步&quot;&gt;与Media Session同步&lt;/h4&gt;&lt;p&gt;UI理应展示media session的最新状态，包括PlaybackState与Metadata。当你创建transport contraols时你可以获取到当前session的状态，来对应调整ui以及controls的可以操作等；创建之后，就需要一个来自Media Session的callback来获取状态的改变了，它就是&lt;code&gt;MediaControllerCompat.Callback&lt;/code&gt;。这个回调也应当在onConnected之后注册到controller。&lt;/p&gt;
&lt;h3 id=&quot;Media_Session_Callbacks&quot;&gt;Media Session Callbacks&lt;/h3&gt;&lt;p&gt;在media session callback中要调用许多的API，去控制Player，管理audio focus，管理session与media browser service的通信等。下表总结了这些工作在callbacks中如何分布。&lt;br&gt;&lt;img src=&quot;http://7u2h4k.com1.z0.glb.clouddn.com/screencapture-developer-android-google-cn-guide-topics-media-apps-audio-app-mediasession-callbacks-html-1502180848097.png&quot; alt=&quot;screencapture-developer-android-google-cn-guide-topics-media-apps-audio-app-mediasession-callbacks-html-1502180848097&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;响应Media_Buttons&quot;&gt;响应Media Buttons&lt;/h2&gt;&lt;p&gt;这里的buttons包含且不仅限于Android设备上的物理按钮、有线/蓝牙耳机上的按钮、其他周边设备按钮。用户的点击按钮操作会在Android上产生一个包含标识的KeyEvent，key code以&lt;code&gt;KEYCODE_MEDIA&lt;/code&gt;开头（如KEYCODE_MEDIA_PLAY）。&lt;/p&gt;
&lt;p&gt;Android系统分发Media button Event规则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先分发给当前屏幕显示的Activity（foreground activity）；&lt;/li&gt;
&lt;li&gt;如果当前Activity没有处理，系统会尝试发送给一个活动状态的MediaSession（调用&lt;code&gt;setActive(true)后&lt;/code&gt;。如果有多个活动的MediaSession，系统会优先选择状态为准备播放（buffering/connecting)、播放中（playing）或者暂停（paused），而不会是停止（stopped）。&lt;/li&gt;
&lt;li&gt;如果没有活动状态的MediaSession，系统会尝试发送给最近一次活动的MediaSession。在5.0（API21）及以上则是发送给调用了&lt;code&gt;setMediaButtonReceiver()&lt;/code&gt;方法的Session。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;由于系统版本的割裂，在不同版本上也有不同的版本的处理方法，这里仅对方案总结如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;通用&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在初始化时对MediaSession设置标签：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mediaSession.setFlags(MediaSessionCompat.FLAG_HANDLES_MEDIA_BUTTONS);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在Service的&lt;code&gt;onStartCommand()&lt;/code&gt;中添加代码（这里MediaButtonReceiver的作用是解释intent并生成对应MediaSession的callbak，onPlay onPause等）：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onStartCommand&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Intent intent, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; flags, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; startId)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  MediaButtonReceiver.handleIntent(mMediaSessionCompat, intent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onStartCommand(intent, flags, startId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;5.0及以上&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在MediaController的callback方法&lt;code&gt;onConnected()&lt;/code&gt;中调用&lt;code&gt;MediaControllerCompat.setMediaController()&lt;/code&gt;（交由系统默认处理）；&lt;/li&gt;
&lt;li&gt;如果需要允许Media Button的Event重新启动非活动状态的Media Session，手动调用&lt;code&gt;setMediaButtonReceiver(PendingIntent intent)&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;5.0以下&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在Activity中override &lt;code&gt;onKeyDownEvent()&lt;/code&gt;以接收处理Media buttons event（必须return true，标识event已被处理）：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onKeyDown&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; keyCode, KeyEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (keyCode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; KeyEvent.KEYCODE_MEDIA_PLAY:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    yourMediaController.dispatchMediaButtonEvent(event);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在Manifest文件中声明全局的&lt;code&gt;MediaButtonReceiver&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;receiver&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;android.support.v4.media.session.MediaButtonReceiver&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;android.intent.action.MEDIA_BUTTON&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;receiver&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;处理音频输出中的变化&quot;&gt;处理音频输出中的变化&lt;/h2&gt;&lt;p&gt;除了要响应UI Controls和Media Button，一个音频App还需要对其它可能影响到声音的Android事件做出响应，主要有以下三种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当用户通过点击物理按钮改变音量时对应调整音量；&lt;/li&gt;
&lt;li&gt;当正在使用中的耳机断开连接时暂停播放；&lt;/li&gt;
&lt;li&gt;当其它应用拿到了音频输出流时停止播放或降低音量。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;响应音量控制按钮&quot;&gt;响应音量控制按钮&lt;/h3&gt;&lt;p&gt;Android对不同的用途使用不同的音频流（Audio Stream），播放音乐，闹钟，通知，来电铃声，系统声音，通话音量等。用户可以独立的控制每一个stream的音量。默认情况下，按下音量控制按钮会改变当前活动状态的音频流，如果当前没有任何正在播放，就调整铃声音量。&lt;br&gt;除非你的app是一个闹钟程序，否则都应该使用&lt;code&gt;STREAM_MUSIC&lt;/code&gt;来播放音频。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;setVolumeControlStream(AudioManager.STREAM_MUSIC);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这是一个Activity方法，最好是在onCreate()中就调用，这样当Activity或Fragment可见时，音量按钮就可以连接上STREAM_MUSIC。&lt;/p&gt;
&lt;h3 id=&quot;不要太吵&quot;&gt;不要太吵&lt;/h3&gt;&lt;p&gt;当有线耳机被拔掉，或者蓝牙耳机断开连接时，音频流会自动切换到内置扬声器。如果你正在以一个很高的音量听音乐，那这就很吵很尴尬了。&lt;br&gt;好在，当以上情况发生时，系统会发出一条&lt;code&gt;ACTION_AUDIO_BECOMING_NOISY&lt;/code&gt;intent广播，创建一个Receiver接收这条广播，在回调中控制暂停或者降低音量：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BecomingNoisyReceiver&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BroadcastReceiver&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onReceive&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context, Intent intent)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (AudioManager.ACTION_AUDIO_BECOMING_NOISY.equals(intent.getAction())) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;// Pause the playback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在开始播放时注册Receiver，在停止时取消注册。按照指导规范，对应的是MediaSession Callbacks的onPlay()和onStop()。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; IntentFilter intentFilter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IntentFilter(AudioManager.ACTION_AUDIO_BECOMING_NOISY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; BecomingNoisyReceiver myNoisyAudioStreamReceiver = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BecomingNoisyReceiver();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MediaSessionCompat.Callback callback = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MediaSessionCompat.Callback() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onPlay&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    registerReceiver(myNoisyAudioStreamReceiver, intentFilter);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onStop&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unregisterReceiver(myNoisyAudioStreamReceiver);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;共享Audio_Focus&quot;&gt;共享Audio Focus&lt;/h3&gt;&lt;p&gt;为了避免多个App同时播放造成混乱，Android引入音频焦点（Audio Focus）的概念，在一个时间点最多只有一个App可以拥有焦点。&lt;/p&gt;
&lt;p&gt;一个规范的音频App应当遵循以下规则来管理音频焦点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开始播放之前，请求焦点，验证是否授予成功；&lt;/li&gt;
&lt;li&gt;当其它app获得焦点，停止播放或者降低音量播放；&lt;/li&gt;
&lt;li&gt;停止播放时，释放焦点。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以上原则仅为从用户体验角度来鼓励遵照，但也不强制。&lt;/p&gt;
&lt;h4 id=&quot;获取和释放焦点&quot;&gt;获取和释放焦点&lt;/h4&gt;&lt;p&gt;在进行播放之前，Media Session的onPlay()回调方法中调用&lt;code&gt;requestAudioFocus()&lt;/code&gt;并验证&lt;code&gt;AUDIOFOCUS_REQUEST_GRANTED&lt;/code&gt;是否成功：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AudioManager am = (AudioManager) mContext.getSystemService(Context.AUDIO_SERVICE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AudioManager.OnAudioFocusChangeListener afChangeListener;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Request audio focus for playback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; result = am.requestAudioFocus(afChangeListener,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             &lt;span class=&quot;comment&quot;&gt;// Use the music stream.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             AudioManager.STREAM_MUSIC,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             &lt;span class=&quot;comment&quot;&gt;// Request permanent focus.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             AudioManager.AUDIOFOCUS_GAIN);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (result == AudioManager.AUDIOFOCUS_REQUEST_GRANTED) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Start playback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参数1 &lt;strong&gt;AudioManager.OnAudioFocusChangeListener&lt;/strong&gt; 焦点变化回调，应该创建在拥有Media Session的Activity或Service中，下个小节展开。&lt;/p&gt;
&lt;p&gt;参数3 &lt;strong&gt;duration hint&lt;/strong&gt;，指定请求焦点的使用范围：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AUDIOFOCUS_GAIN&lt;/code&gt;永久焦点，在可预见的未来一直播放，期望上一个焦点应用停止播放；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AUDIOFOCUS_GAIN_TRANSIENT&lt;/code&gt;暂时焦点，预计短时间播放，期望上一个焦点应用暂停播放；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK&lt;/code&gt;带‘DUCK’的暂时焦点，预计短时播放，且不需要上一个焦点应用暂停或停止，可以降低音量同时播放（Duck means Lower）。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AudioManager am = (AudioManager) mContext.getSystemService(Context.AUDIO_SERVICE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AudioManager.OnAudioFocusChangeListener afChangeListener;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Request audio focus for playback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; result = am.requestAudioFocus(afChangeListener,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             &lt;span class=&quot;comment&quot;&gt;// Use the music stream.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             AudioManager.STREAM_MUSIC,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             &lt;span class=&quot;comment&quot;&gt;// Request permanent focus.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             AudioManager.AUDIOFOCUS_GAIN);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (result == AudioManager.AUDIOFOCUS_REQUEST_GRANTED) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Start playback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;播放结束，请求释放焦点：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Abandon audio focus when playback complete&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;am.abandonAudioFocus(afChangeListener);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;响应音频焦点变化&quot;&gt;响应音频焦点变化&lt;/h4&gt;&lt;p&gt;一个请求音频焦点的app必须要在其它app请求焦点的时候可以自己释放焦点。这就是AudioManager.OnAudioFocusChangeListener的意义所在。&lt;br&gt;如下代码所示，参数&lt;strong&gt;focusChange&lt;/strong&gt;指正在发生的变化，也就是正在请求获取焦点的app所指定的duration hint，当前app应当对应的做出响应：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Handler mHandler = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Handler();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AudioManager.OnAudioFocusChangeListener afChangeListener =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AudioManager.OnAudioFocusChangeListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onAudioFocusChange&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; focusChange)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (focusChange == AudioManager.AUDIOFOCUS_LOSS) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Permanent loss of audio focus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Pause playback immediately&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mediaController.getTransportControls().pause();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Wait 30 seconds before stopping playback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mHandler.postDelayed(mDelayedStopRunnable,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          TimeUnit.SECONDS.toMillis(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (focusChange == AUDIOFOCUS_LOSS_TRANSIENT) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Pause playback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (focusChange == AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Lower the volume, keep playing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (focusChange == AudioManager.AUDIOFOCUS_GAIN) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Your app has been granted audio focus again&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Raise volume to normal, restart playback if necessary&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Runnable mDelayedStopRunnable = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Runnable() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mediaController.getTransportControls().stop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为了确保用户重启播放时，延时停止操作不会发生，必须要在任意状态变化响应时调用&lt;code&gt;mHandler.removeCallbacks(mDelayedStopRunnable)&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.android.google.cn/guide/topics/media-apps/media-apps-overview.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;开发者文档 Media Apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在Android系统中构建一个具有多媒体功能的App，如果是使用系统的Media Player，那么就需要了解Android系统对Media的处理流程，会有很多的细节需要开发者关注，比如播放器的各种状态，物理按键的响应等。本文主要是对Android开发者网站API Guide中“Media Apps”章节内容的翻译以及部分个人的理解。&lt;/p&gt;
    
    </summary>
    
      <category term="Blog" scheme="http://hellopony.cn/categories/Blog/"/>
    
    
  </entry>
  
  <entry>
    <title>ARouter的使用及基本原理</title>
    <link href="http://hellopony.cn/2018/02/04/ARouter/"/>
    <id>http://hellopony.cn/2018/02/04/ARouter/</id>
    <published>2018-02-04T07:33:54.211Z</published>
    <updated>2018-02-04T07:33:37.908Z</updated>
    
    <content type="html">&lt;p&gt;ARouter是阿里巴巴开源的一个Android平台上的路由组件，为模块化之后的工程提供跨模块通信功能。在引入项目中使用的同时，也阅读了其源码进行了解和学习。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;ARouter&quot;&gt;ARouter&lt;/h1&gt;&lt;p&gt; Android平台中对页面、服务提供路由功能的中间件。&lt;a href=&quot;https://github.com/alibaba/ARouter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;「GitHub ARouter」&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用&quot;&gt;使用&lt;/h2&gt;&lt;h3 id=&quot;gradle配置&quot;&gt;gradle配置&lt;/h3&gt;&lt;p&gt;每个使用到此路由的Module都需要在build.gradle中添加如下编译和依赖配置（发起模块与目标模块都）：&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;android &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    defaultConfig &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	javaCompileOptions &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    annotationProcessorOptions &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		arguments = [ &lt;span class=&quot;string&quot;&gt;moduleName :&lt;/span&gt; project.getName() ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dependencies &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 替换成最新版本, 需要注意的是api要与compiler匹配使用，均使用最新版可以保证兼容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    compile &lt;span class=&quot;string&quot;&gt;&#39;com.alibaba:arouter-api:x.x.x&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    annotationProcessor &lt;span class=&quot;string&quot;&gt;&#39;com.alibaba:arouter-compiler:x.x.x&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;混淆配置&quot;&gt;混淆配置&lt;/h3&gt;&lt;p&gt;如果项目使用混淆，需要keep一下：&lt;/p&gt;
&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-keep &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;com&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;alibaba&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;android&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;arouter&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;routes&lt;/span&gt;.**&lt;/span&gt;&amp;#123;*;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-keep &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;com&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;alibaba&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;android&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;arouter&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;facade&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;template&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;ISyringe&lt;/span&gt;&lt;/span&gt;&amp;#123;*;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;初始化&quot;&gt;初始化&lt;/h3&gt;&lt;p&gt;初始化工作只需要在Application onCreate的时候执行一次即可，无需重复添加：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//初始化ARouter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (BuildConfig.DEBUG) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ARouter.openLog();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ARouter.openDebug();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ARouter.init(getApplication());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;RouterPath&quot;&gt;RouterPath&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;注：ARouter使用Path对目标组件进行唯一标识，Path至少需要有两级，/xx/xxxx，一级路径名xx会被ARouter识别为Group名&lt;/strong&gt;；&lt;br&gt;为避免多模块使用导致路径管理混乱，在CommonBuiness中引入RouterPath类对各个Module的路由路径定义进行管理，如果租房模块RentModule中需要添加一个租房单页的跨模块路由页面，需要先在RouterPath中添加路径，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String GROUP_RENT = &lt;span class=&quot;string&quot;&gt;&quot;/rent/&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Rent&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String DETAIL = GROUP_RENT + &lt;span class=&quot;string&quot;&gt;&quot;detail&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;RouterService&quot;&gt;RouterService&lt;/h3&gt;&lt;p&gt;为规范跨模块跳转的使用，引入RouterService对“&lt;strong&gt;可能重复使用的&lt;/strong&gt;”路由跳转方法进行统一。如果某些页面仅有一个入口，可以忽略此步骤。如添加一个租房房源单页的带参数入口，在RouterService中添加如下路由方法：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;startHouseDetailActivity&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String propertyJson, String bp)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ARouter.getInstance().build(RouterPath.Rent.DETAIL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .withString(AnjukeConstants.Rent.EXTRA_FROM, bp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .withString(AnjukeConstants.Rent.EXTRA_PROPERTY_INFO, propertyJson)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .navigation();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;添加注解&quot;&gt;添加注解&lt;/h3&gt;&lt;p&gt;在对应目标路由页面的Activity添加@Route注解：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Route&lt;/span&gt;(path = RouterPath.Rent.DETAIL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HouseDetailActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AbstractBaseActivity&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;参数携带&quot;&gt;参数携带&lt;/h3&gt;&lt;p&gt;对于一般基本类型的参数携带，ARouter均可直接支持，也可使用&lt;code&gt;.withParcelable(key, object)&lt;/code&gt;来传递对象，使用&lt;code&gt;withParcelableArrayList(key, objectArrayList)&lt;/code&gt;来传递对象数组列表。&lt;/p&gt;
&lt;h3 id=&quot;指定Intent_Flag&quot;&gt;指定Intent Flag&lt;/h3&gt;&lt;p&gt;某些场景下我们在跳转页面时需要在Intent中携带Flag信息&lt;code&gt;intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);&lt;/code&gt;，在使用ARouter中的实现方法是在路由方法中&lt;code&gt;.withFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ARouter.getInstance().build(&lt;span class=&quot;string&quot;&gt;&quot;/home/main&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.withFlags(ntent.FLAG_ACTIVITY_CLEAR_TOP);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.navigation();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;startActivityForResult&quot;&gt;startActivityForResult&lt;/h3&gt;&lt;p&gt;&lt;code&gt;.navigation()&lt;/code&gt;实现的是startActivity，&lt;code&gt;.navigation(context, requestCode)&lt;/code&gt;实现的就是startActivityForResult；&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// navigation的第一个参数必须是Activity，第二个参数则是RequestCode&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ARouter.getInstance().build(&lt;span class=&quot;string&quot;&gt;&quot;/home/main&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;ap&quot;&lt;/span&gt;).navigation(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;获取Fragment&quot;&gt;获取Fragment&lt;/h3&gt;&lt;p&gt;简单Fragment可以直接获取到，然后add到Activity即可。复杂Fragment如二手房列表PropListFragment和租房列表HouseListFragment，有内部接口需要实现加载回调等其他交互逻辑的，需要自行抽取基类和接口处理（具体参考代码）。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Fragment fragment = (Fragment) ARouter.getInstance().build(&lt;span class=&quot;string&quot;&gt;&quot;/test/fragment&quot;&lt;/span&gt;).navigation();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;拦截器&quot;&gt;拦截器&lt;/h3&gt;&lt;p&gt;ARouter拦截器的经典应用，就是在跳转中处理登录事件，或其他需要暂停页面跳转等待用于确认操作的场景。&lt;br&gt;下面的代码是一个拦截器，在拦截到path为”/app/third”的跳转时，弹出一个确认继续的弹窗，在弹窗的点击事件中决定continue还是interrupt。&lt;br&gt;在安居客的登录应用场景中，登录操作需要打开1-2个activity，用户操作时长无法确认，而且登录的成功与否也无法简单的通过回调事件来通知（实际是使用广播），因此不建议在登录场景使用拦截器。&lt;/p&gt;
&lt;p&gt;注：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由于Interceptor执行在子线程中，AlertDialog的show方法需要手动切换到UI线程上来调用；&lt;/li&gt;
&lt;li&gt;AlertDialog.Builder(context)需要context为Activity，而IInterceptor的init(context)中context为Application Context，所以还需要指定具体的Activity！&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Interceptor&lt;/span&gt;(priority = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,name = &lt;span class=&quot;string&quot;&gt;&quot;TheThirdInterceptor&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ThirdInterceptor&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IInterceptor&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String TAG = ThirdInterceptor.class.getSimpleName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// This is an application context&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Context context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Postcard postcard, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; InterceptorCallback callback)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&quot;/app/third&quot;&lt;/span&gt;.equals(postcard.getPath())) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; AlertDialog.Builder builder = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AlertDialog.Builder(LibMainActivity.getActivity())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					.setCancelable(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					.setTitle(&lt;span class=&quot;string&quot;&gt;&quot;温馨提示&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					.setMessage(&lt;span class=&quot;string&quot;&gt;&quot;由于你触发了&quot;&lt;/span&gt; + postcard.getPath() + &lt;span class=&quot;string&quot;&gt;&quot;条件激活了拦截器，需要确认以下操作，是否继续？&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					.setPositiveButton(&lt;span class=&quot;string&quot;&gt;&quot;登录并继续&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DialogInterface.OnClickListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DialogInterface dialog, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; which)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;							postcard.withString(&lt;span class=&quot;string&quot;&gt;&quot;login_user&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;pony&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;							callback.onContinue(postcard);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					.setNeutralButton(&lt;span class=&quot;string&quot;&gt;&quot;继续&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DialogInterface.OnClickListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DialogInterface dialog, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; which)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;							callback.onContinue(postcard);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					.setNegativeButton(&lt;span class=&quot;string&quot;&gt;&quot;取消&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DialogInterface.OnClickListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DialogInterface dialog, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; which)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;							callback.onInterrupt(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Throwable(&lt;span class=&quot;string&quot;&gt;&quot;Manual cancel.&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			MainLooper.runOnUiThread(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Runnable() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					builder.create().show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			callback.onContinue(postcard);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.context = context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Log.d(TAG, &lt;span class=&quot;string&quot;&gt;&quot;init.&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;****&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;注解参数&quot;&gt;注解参数&lt;/h3&gt;&lt;p&gt;默认情况下，在路由方法中携带的参数是以Intent Extras的形式传递到目标页面的，旧的getIntentExtras()解析参数的方法仍然可以使用。以下要说的是ARouter提供的通过注解的方式自动解析URL中参数的方法，可做为新建目标页面的可选方案使用。（&lt;strong&gt;注意：在使用@Autowired注解入参的情况下，需要在onCreate中添加注入代码&lt;code&gt;ARouter.getInstance().inject(this)&lt;/code&gt;；被注解参数不能为private。&lt;/strong&gt;）。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Route&lt;/span&gt;(path = &lt;span class=&quot;string&quot;&gt;&quot;/app/second&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SecondTestActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;annotation&quot;&gt;@Autowired&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; String name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;annotation&quot;&gt;@Autowired&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;annotation&quot;&gt;@Autowired&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; isGraduated;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;annotation&quot;&gt;@Autowired&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	User friend;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		setContentView(R.layout.activity_second_test);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ARouter.getInstance().inject(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		((TextView) findViewById(R.id.textView)).setText(String.format(&lt;span class=&quot;string&quot;&gt;&quot;Name:%s\nAge:%d\nGraduated:%b\nFriend:%s&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				name, age, isGraduated, friend.toString()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;基本原理&quot;&gt;基本原理&lt;/h2&gt;&lt;p&gt;对源码进行粗读之后，根据所理解的ARouter工作原理，对应使用流程，对原理进行解释，整理如下。&lt;/p&gt;
&lt;p&gt;两条线：编译时 和 运行时&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编译时：根据注解，生成路由表类&lt;/li&gt;
&lt;li&gt;运行时：载入路由表，查找Path对应的Class&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;arouter-compiler&quot;&gt;arouter-compiler&lt;/h3&gt;&lt;p&gt;三个Processors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RouteProcessor 普通路由注解&lt;/li&gt;
&lt;li&gt;AutowiredProcessor 参数注解&lt;/li&gt;
&lt;li&gt;InterceptorProcessor 拦截器注解&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;@Route &amp;amp; @Interceptor生成的路由表类，与 @Autowired 生成的参数注解类，名字生成规则不同，路径不同；&lt;/p&gt;
&lt;p&gt;路由表固定路径：com.alibaba.android.arouter.routes&lt;br&gt;&lt;code&gt;ARouter$$Group$$GROUP_NAME.java&lt;/code&gt;实现IRouteGroup接口，负责装载Group与其包含的Path；&lt;br&gt;&lt;code&gt;ARouter$$Root$$MODULE_NAME.java&lt;/code&gt;实现IRouteRoot接口，负责装载Group与其对应的路由表（生成）类；&lt;br&gt;&lt;code&gt;ARouter$$Interceptor$$MODULE_NAME.java&lt;/code&gt;实现IInterceptorGroup接口，负责装载Group与其对应的；&lt;/p&gt;
&lt;p&gt;参数注解类动态路径，同注解此参数的组件路径：&lt;br&gt;&lt;code&gt;ACTIVITY_NAME$$ARouter$$Autowired.java&lt;/code&gt; inject方法，负责从Intent中取出Extras并赋值给Activity中对应注解的变量。&lt;/p&gt;
&lt;h3 id=&quot;arouter-api&quot;&gt;arouter-api&lt;/h3&gt;&lt;h4 id=&quot;-init()&quot;&gt;.init()&lt;/h4&gt;&lt;p&gt;扫描固定路径下的apt文件，加载路由表到内存Map，缓存SP，对Root，Interceptor（除Group之外）的缓存表执行loadInto(…)，得到内存中的路由表Warehouse；&lt;/p&gt;
&lt;h4 id=&quot;-build(…)&quot;&gt;.build(…)&lt;/h4&gt;&lt;p&gt;根据传入的path，提取group，产生一个新的Postcard（ARouter的基本操作单元，可理解为Intent）；&lt;/p&gt;
&lt;h4 id=&quot;-with(…)&quot;&gt;.with(…)&lt;/h4&gt;&lt;p&gt;更新Postcard的Bundle；&lt;/p&gt;
&lt;h4 id=&quot;-_completion(postcard)&quot;&gt;._completion(postcard)&lt;/h4&gt;&lt;p&gt;位于LogisticCenter中，非暴露方法。顾名思义。根据入参postcard的path，在内存路由表Warehouse中查找对应的RouteMeta（路由元数据）。如果不存在，找到对应的Group路由表执行loadInto()；然后完善完整的Postcard信息，包括type，destination，extras等。&lt;/p&gt;
&lt;h4 id=&quot;-nagivation(…)&quot;&gt;.nagivation(…)&lt;/h4&gt;&lt;p&gt;真正的nagivation之前会先执行_completion(postcard)，如果没有异常，再走interceptorService.doInterceptions遍历所有（由InterceptorServiceImpl.java的逻辑可得知，其本身也是一个InterceptorService，通过@Route注册，在ARouter init时即完成初始化）的Interceptor，如果continue就调用_navigation(…)，在这里是完成最终的Activity跳转（Intent，ActivityCompat.startActivity）或者Fragment实例返回。&lt;/p&gt;
&lt;h4 id=&quot;-inject(activity)&quot;&gt;.inject(activity)&lt;/h4&gt;&lt;p&gt;装载对应activity的Autowired注册表，执行其中的inject方法。前面关于注解参数提到过，就是自动执行了getIntent，取出Extras并赋值给Activity中对应注解的变量。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;ARouter是阿里巴巴开源的一个Android平台上的路由组件，为模块化之后的工程提供跨模块通信功能。在引入项目中使用的同时，也阅读了其源码进行了解和学习。&lt;/p&gt;
    
    </summary>
    
      <category term="Blog" scheme="http://hellopony.cn/categories/Blog/"/>
    
    
  </entry>
  
  <entry>
    <title>Android图片拍摄一二</title>
    <link href="http://hellopony.cn/2017/06/20/Android%E5%9B%BE%E7%89%87%E6%8B%8D%E6%91%84%E4%B8%80%E4%BA%8C/"/>
    <id>http://hellopony.cn/2017/06/20/Android图片拍摄一二/</id>
    <published>2017-06-20T03:41:52.000Z</published>
    <updated>2017-06-20T03:41:38.000Z</updated>
    
    <content type="html">&lt;p&gt;关于在Android开发中调用摄像头进行图片拍摄，保存到指定路径，通过FileProvider获取原始图片以及提供图片给其它使用方等过程的细节进行梳理。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;1-_请求Camera权限&quot;&gt;1. 请求Camera权限&lt;/h3&gt;&lt;p&gt;如果拍照是app的主要功能，那Google Play就需要知道目标设备是否有摄像头。&lt;br&gt;android:required是告诉Google Play是否强制下载该app的设备需要硬件支持；如果false，则需要在运行时进行判断是否有摄像头&lt;code&gt;hasSystemFeature(PackageManager.FEATURE_CAMERA)&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;manifest&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;uses-feature&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;android.hardware.camera&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;attribute&quot;&gt;android:required&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;true&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;manifest&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-_使用Camera_App拍照&quot;&gt;2. 使用Camera App拍照&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; REQUEST_IMAGE_CAPTURE = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dispatchTakePictureIntent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Intent takePictureIntent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Intent(MediaStore.ACTION_IMAGE_CAPTURE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (takePictureIntent.resolveActivity(getPackageManager()) != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        startActivityForResult(takePictureIntent, REQUEST_IMAGE_CAPTURE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-_获取缩略图&quot;&gt;3. 获取缩略图&lt;/h3&gt;&lt;p&gt;注意：这里从”data”中获取出来的仅是照片的缩略图，可能足够满足小图展示的需求；默认情况下Android Camera App会把照片保存在外部公共存储的相册&lt;code&gt;Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM)&lt;/code&gt;；此时需要声明or动态申请 &lt;code&gt;WRITE_EXTERNAL_STORAGE&lt;/code&gt; 权限。&lt;br&gt;如果需要取得全尺寸的完整图片，&lt;code&gt;data.getData()&lt;/code&gt; 即可得到原图的Uri，形如“&lt;code&gt;content://media/external/images/media/6363&lt;/code&gt;”，绝对路径如&lt;code&gt;/storage/emulated/0/DCIM/Camera/20170516_114052.jpg&lt;/code&gt;（PS：目前仅在samsung上测试）。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onActivityResult&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; requestCode, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; resultCode, Intent data)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (requestCode == REQUEST_IMAGE_CAPTURE &amp;amp;&amp;amp; resultCode == RESULT_OK) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Bundle extras = data.getExtras();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Bitmap imageBitmap = (Bitmap) extras.get(&lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mImageView.setImageBitmap(imageBitmap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;4-_保存全尺寸图片&quot;&gt;4. 保存全尺寸图片&lt;/h3&gt;&lt;p&gt;如果需要将照片保存到App的私有路径，其它App无法读取，需要给Camera指定一个完整的保存路径&lt;code&gt;getExternalFilesDir()&lt;/code&gt;。4.4开始写入这个路径将不再需要手动申请&lt;code&gt;WRITE_EXTERNAL_STORAGE&lt;/code&gt;权限，因为这个路径是绝对私有，对其它app来说是不可访问的。所以可以这样声明权限：&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;manifest&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;uses-permission&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     &lt;span class=&quot;attribute&quot;&gt;android:maxSdkVersion&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;18&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;manifest&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;指定照片的保存路径，然后还需要生成一个无冲突的唯一文件名，顺手再留下一个图片路径以备后用。如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;String mCurrentPhotoPath;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; File &lt;span class=&quot;title&quot;&gt;createImageFile&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Create an image file name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String timeStamp = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SimpleDateFormat(&lt;span class=&quot;string&quot;&gt;&quot;yyyyMMdd_HHmmss&quot;&lt;/span&gt;).format(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Date());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String imageFileName = &lt;span class=&quot;string&quot;&gt;&quot;JPEG_&quot;&lt;/span&gt; + timeStamp + &lt;span class=&quot;string&quot;&gt;&quot;_&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    File storageDir = getExternalFilesDir(Environment.DIRECTORY_PICTURES);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    File image = File.createTempFile(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        imageFileName,  &lt;span class=&quot;comment&quot;&gt;/* prefix */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;.jpg&quot;&lt;/span&gt;,         &lt;span class=&quot;comment&quot;&gt;/* suffix */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        storageDir      &lt;span class=&quot;comment&quot;&gt;/* directory */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Save a file: path for use with ACTION_VIEW intents&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCurrentPhotoPath = image.getAbsolutePath();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; image;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;发起Intent的方法也要调整：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; REQUEST_TAKE_PHOTO = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dispatchTakePictureIntent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Intent takePictureIntent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Intent(MediaStore.ACTION_IMAGE_CAPTURE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Ensure that there&#39;s a camera activity to handle the intent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (takePictureIntent.resolveActivity(getPackageManager()) != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Create the File where the photo should go&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        File photoFile = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            photoFile = createImageFile();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException ex) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Error occurred while creating the File&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Continue only if the File was successfully created&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (photoFile != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Uri photoURI = FileProvider.getUriForFile(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                  &lt;span class=&quot;string&quot;&gt;&quot;com.example.android.fileprovider&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                  photoFile);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, photoURI);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            startActivityForResult(takePictureIntent, REQUEST_TAKE_PHOTO);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：这里使用的&lt;code&gt;getUriForFile(Context, String, File)&lt;/code&gt;返回的是形如&lt;code&gt;content://&lt;/code&gt;的URI，对于target Android 7.0（API 24）及以上的app，跨越package传递&lt;code&gt;file://&lt;/code&gt;URI会抛出&lt;code&gt;FileUriExposedException&lt;/code&gt;，需要统一使用&lt;strong&gt;FileProvider&lt;/strong&gt;来处理。关于FileProvider的详细分析见附录。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先要在manifest中配置FileProvider：&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;application&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;provider&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;android.support.v4.content.FileProvider&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;android:authorities&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;com.example.android.fileprovider&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;android:exported&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;android:grantUriPermissions&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;true&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;meta-data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attribute&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;android.support.FILE_PROVIDER_PATHS&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attribute&quot;&gt;android:resource&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;@xml/file_paths&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;meta-data&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;provider&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;application&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里要确保&lt;code&gt;android:authorities&lt;/code&gt;设置的字符串与&lt;code&gt;getUriForFile(Context, String, File)&lt;/code&gt;的第二个参数authorities一致。然后，如meta-data配置的一样，provider需要从资源文件 res/xml/file_paths.xml中读取路径来做为配置。&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pi&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;paths&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;xmlns:android&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;external-path&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;my_images&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;path&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;Android/data/com.example.package.name/files/Pictures&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;paths&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里的path组件与&lt;code&gt;getExternalFilesDir( Environment.DIRECTORY_PICTURES)&lt;/code&gt;返回的路径是相符的。&lt;a href=&quot;https://developer.android.google.cn/reference/android/support/v4/content/FileProvider.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;关于FileProvider的文档&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;5-_添加照片到相册&quot;&gt;5. 添加照片到相册&lt;/h3&gt;&lt;p&gt;（Don’t know why在我的samsung测试机上不生效）&lt;br&gt;在创建照片的时候我们已经指定了照片的第一保存位置，这对当前app使用来说是最方便且可控的，而且保存在&lt;code&gt;getExternalFilesDir()&lt;/code&gt;路径下的文件不会被media scanner扫描到。但是对于其它app来说，访问到这些照片最简单的方式就是通过系统的&lt;strong&gt;Media Provider&lt;/strong&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;galleryAddPic&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Intent mediaScanIntent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    File f = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(mCurrentPhotoPath);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Uri contentUri = Uri.fromFile(f);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mediaScanIntent.setData(contentUri);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sendBroadcast(mediaScanIntent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;6-_动态调整图片&quot;&gt;6. 动态调整图片&lt;/h3&gt;&lt;p&gt;操作或显示全尺寸图对内存的损耗巨大，所以我们可以通过把jpeg图片按照目标显示视图的大小来动态的调整，以减少内存的使用。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setPic&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Get the dimensions of the View&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; targetW = mImageView.getWidth();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; targetH = mImageView.getHeight();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Get the dimensions of the bitmap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    BitmapFactory.Options bmOptions = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BitmapFactory.Options();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bmOptions.inJustDecodeBounds = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    BitmapFactory.decodeFile(mCurrentPhotoPath, bmOptions);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; photoW = bmOptions.outWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; photoH = bmOptions.outHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Determine how much to scale down the image&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; scaleFactor = Math.min(photoW/targetW, photoH/targetH);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Decode the image file into a Bitmap sized to fill the View&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bmOptions.inJustDecodeBounds = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bmOptions.inSampleSize = scaleFactor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bmOptions.inPurgeable = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Bitmap bitmap = BitmapFactory.decodeFile(mCurrentPhotoPath, bmOptions);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mImageView.setImageBitmap(bitmap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;附录：关于File_Provider&quot;&gt;附录：关于File Provider&lt;/h3&gt;&lt;p&gt;File Provider是Content Provider的子类，通过创建content:// Uri来代替file:// Uri进而提升文件访问的安全性。&lt;br&gt;Content URI允许授予临时读写权限。当一个包含Content URI的Intent发送到目标app时（也可以通过 Intent.setFlags()来添加权限）。这些权限在目标app接受该Intent的Activity active期间一致可用；如果是Service，权限在Servce Running期间可用。&lt;br&gt;相反，如果需要控制 file:/// Uri就必须修改指定路径或文件的文件系统权限，同时这个权限针对所有其它app可用，这种情况会持续到你再次修改它。这样的文件访问是完全不安全的。&lt;br&gt;FileProvider通过Content URI提供的更高安全性的文件访问控制是Android系统安全的关键部分。&lt;/p&gt;
&lt;h4 id=&quot;a-_定义FileProvider&quot;&gt;a. 定义FileProvider&lt;/h4&gt;&lt;p&gt;在app的manifest文件中添加&lt;code&gt;&amp;lt;provider&amp;gt;&lt;/code&gt;即可，设置&lt;code&gt;android:name&lt;/code&gt;属性为&lt;code&gt;android.support.v4.content.FileProvider&lt;/code&gt;；&lt;code&gt;android:authorities&lt;/code&gt;取决与你所控制的域名（app package name)；FileProvider不需要公开，所以&lt;code&gt;android:exported&lt;/code&gt;设置为false；&lt;code&gt;android:grantUriPermissions&lt;/code&gt;设置为true去允许为文件授予临时访问权限。&lt;br&gt;一个完整的FileProvider定义如下：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;provider&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:name=&quot;android.support.v4.content.FileProvider&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:authorities=&quot;com.mydomain.fileprovider&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:exported=&quot;false&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:grantUriPermissions=&quot;true&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;meta-data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:name=&quot;android.support.FILE_PROVIDER_PATHS&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:resource=&quot;@xml/file_paths&quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/provider&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;b-_指定可用文件&quot;&gt;b. 指定可用文件&lt;/h4&gt;&lt;p&gt;FileProvider仅对指定的路径生成Content URI；这个指定工作在xml中完成。&lt;br&gt;&lt;strong&gt;在工程中添加&lt;code&gt;res/xml/file_paths.xml&lt;/code&gt;&lt;/strong&gt;（在&lt;provider&gt;的&lt;meta-data&gt;中指定的path资源），代码如下：&lt;/meta-data&gt;&lt;/provider&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;paths&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;xmlns:android&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;files-path&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;my_images&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;path&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;images/&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;files-path&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;my_docs&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;path&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;docs/&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;paths&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;paths&gt;必须包含一个或多个子元素：&lt;/paths&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;files-path name=&amp;quot;name&amp;quot; path=&amp;quot;path&amp;quot; /&amp;gt;&lt;/code&gt;：app内部存储的&lt;code&gt;files/&lt;/code&gt;子目录；与&lt;code&gt;Context.getFilesDir()&lt;/code&gt;一致。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;cache-path name=&amp;quot;name&amp;quot; path=&amp;quot;path&amp;quot; /&amp;gt;&lt;/code&gt;：app内部存储的缓存子目录；与&lt;code&gt;getCacheDir()&lt;/code&gt;一致。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;external-path name=&amp;quot;name&amp;quot; path=&amp;quot;path&amp;quot; /&amp;gt;&lt;/code&gt;：外部存储的根目录；与&lt;code&gt;Environment.getExternalStorageDirectory()&lt;/code&gt;一致。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;external-files-path name=&amp;quot;name&amp;quot; path=&amp;quot;path&amp;quot; /&amp;gt;&lt;/code&gt;：app的外部存储根目录，与&lt;code&gt;Context#getExternalFilesDir(String type) Context.getExternalFilesDir(null)&lt;/code&gt;一致。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;external-cache-path name=&amp;quot;name&amp;quot; path=&amp;quot;path&amp;quot; /&amp;gt;&lt;/code&gt;：app的外部缓存根目录，与&lt;code&gt;Context.getExternalCacheDir()&lt;/code&gt;一致。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所有以上子元素都包含两个属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name=”name”：URI路径片段。为了安全，生成的Uri会以name值隐藏正在共享的目录的真实路径。&lt;/li&gt;
&lt;li&gt;path=”path”：共享的真实目录。path值永远指向一个子目录，而不是特定的文件；不能通过文件名来共享指定的某个文件，也不能使用通配符来指定一部分文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;c-_生成文件的Content_URI&quot;&gt;c. 生成文件的Content URI&lt;/h4&gt;&lt;p&gt;APP必须生成Content URI来与其它app共享数据。生成URI的代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;File imagePath = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(Context.getFilesDir(), &lt;span class=&quot;string&quot;&gt;&quot;images&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;File newFile = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(imagePath, &lt;span class=&quot;string&quot;&gt;&quot;default_image.jpg&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Uri contentUri = getUriForFile(getContext(), &lt;span class=&quot;string&quot;&gt;&quot;com.mydomain.fileprovider&quot;&lt;/span&gt;, newFile);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;APP可以将这个URI通过Intent发送给Client app，接受方通过调用&lt;code&gt;ContentResolver.openFileDescriptor&lt;/code&gt;来得到一个&lt;code&gt;ParcelFileDescriptor&lt;/code&gt;进而访问文件内容。具体接收方app的接收处理见Demo。&lt;br&gt;&lt;a href=&quot;https://developer.android.google.cn/reference/android/content/ContentResolver.html#openFileDescriptor(android.net.Uri, java.lang.String&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;关于ContentResolver.openFileDescriptor&lt;/a&gt;)&lt;/p&gt;
&lt;h4 id=&quot;d-_为URI授予临时权限&quot;&gt;d. 为URI授予临时权限&lt;/h4&gt;&lt;p&gt;为通过&lt;code&gt;getUriForFile()&lt;/code&gt;得到的content URI授予访问权限：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Content Uri设置到Intent.setData()&lt;/li&gt;
&lt;li&gt;调用Intent.setFlags()，入参 FLAG_GRANT_READ_URI_PERMISSION or FLAG_GRANT_WRITE_URI_PERMISSION or both。&lt;/li&gt;
&lt;li&gt;发送Intent到另一个app，通常是setResult(intent)。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Intent intent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Intent();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Uri imageUri = FileProvider.getUriForFile(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, FILE_PROVIDER_AUTHORITY, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(currentPhotoPath));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;intent.setData(imageUri);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setResult(RESULT_OK, intent);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;e-_DEMO&quot;&gt;e. DEMO&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ponywei/MyFileProviderDemo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FileProvider图片拍摄及提供方示例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ponywei/MyFileProviderClient&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FileProvider图片接受方示例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;参考资料&quot;&gt;参考资料&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.android.google.cn/training/camera/photobasics.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;“Taking Photos Simply” training class.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;关于在Android开发中调用摄像头进行图片拍摄，保存到指定路径，通过FileProvider获取原始图片以及提供图片给其它使用方等过程的细节进行梳理。&lt;/p&gt;
    
    </summary>
    
      <category term="Blog" scheme="http://hellopony.cn/categories/Blog/"/>
    
    
  </entry>
  
  <entry>
    <title>Android WebView相关姿势</title>
    <link href="http://hellopony.cn/2016/08/24/Android%20WebView%E7%9B%B8%E5%85%B3%E5%A7%BF%E5%8A%BF/"/>
    <id>http://hellopony.cn/2016/08/24/Android WebView相关姿势/</id>
    <published>2016-08-24T11:53:06.000Z</published>
    <updated>2016-04-01T06:32:15.000Z</updated>
    
    <content type="html">&lt;p&gt;在Android项目开发中，WebView的使用都是必不可少的。在一个基本功能完备的项目中，都会把WebView提取成一个公用的Activity组件，在需要跳转到H5页面的地方启动这个activity并传入相关参数即可。这样的简便快捷的使用，却容易造成开发者对WebView相关知识的疏忽。遂成此文，整理一二。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;添加WebView&quot;&gt;添加WebView&lt;/h2&gt;&lt;p&gt;在应用中使用WebView，只需要在layout文件中添加&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;WebView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:&lt;span class=&quot;property&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@+id/main_web_view&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_width=&lt;span class=&quot;string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_height=&lt;span class=&quot;string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用loadUrl方法来加载WebView&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;WebView webView = (WebView) findViewById(R.&lt;span class=&quot;property&quot;&gt;id&lt;/span&gt;.main_web_view);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webView.loadUrl(&lt;span class=&quot;string&quot;&gt;&quot;http://www.example.com&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在此之前，还要确保应用有Internet权限&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;uses-permission android:&lt;span class=&quot;property&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android.permission.INTERNET&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;至此，一个基本的WebView页就完成了。&lt;/p&gt;
&lt;h2 id=&quot;在WebView中使用JavaScript&quot;&gt;在WebView中使用JavaScript&lt;/h2&gt;&lt;p&gt;默认情况下，WebView是禁用JavaScript的。通过如下代码来为WebView开启JavaScript支持&lt;/p&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;WebSettings webSettings = webView.getSettings()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webSettings.setJavaScriptEnabled(true)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;WebSettings管理着很多很有用的WebView设置项，例如setUserAgentString()等。具体细节可戳  &lt;a href=&quot;http://androiddoc.qiniudn.com/reference/android/webkit/WebSettings.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WebSettings Doc&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;WebView与JavaScript的交互*&quot;&gt;WebView与JavaScript的交互*&lt;/h3&gt;&lt;p&gt;WebView属Android端，所以该交互问题就是Android本地与JS端的交互问题。为了便于梳理，写了如图所示的一个Demo &lt;a href=&quot;https://github.com/ponywei/WebViewJSDemo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Source code&lt;/a&gt;，上半部分白底为WebView，加载本地的一个html页面，内含一个button和一个h1；下半部分是Android上的一个Button。 &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7u2h4k.com1.z0.glb.clouddn.com/2016-03-31%2017.55.55.png&quot; alt=&quot;屏幕截图&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;WebView调用JavaScript的方法&quot;&gt;WebView调用JavaScript的方法&lt;/h3&gt;&lt;p&gt;WebView调用JavaScript的方法相对比较简单，如果是无参数方法：&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;webView.&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;loadUrl&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;javascript:METHOD&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中 METHOD 为javascript方法名；&lt;br&gt;如果方法需要入参，例如下面这个javascript方法：&lt;/p&gt;
&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testMethod&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(name)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由于javascript为弱类型语言，所以入参并没有指定任何类型；具体类型的处理一般在javascript方法体内。&lt;br&gt;在webView中调用方法（注意，如果是字符串类型，必须在用单引号包裹，否则javascript无法识别，会提示name为定义）：&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;String &lt;span class=&quot;property&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;Android&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webView.loadUrl(&lt;span class=&quot;string&quot;&gt;&quot;javascript:testMethod(&#39;&quot;&lt;/span&gt; + &lt;span class=&quot;property&quot;&gt;name&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;&#39;)&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;JavaScript调用Android端的Java方法&quot;&gt;JavaScript调用Android端的Java方法&lt;/h3&gt;&lt;h4 id=&quot;1-创建接口&quot;&gt;1.创建接口&lt;/h4&gt;&lt;p&gt;想要在 JavaScript 中调用相关的 Java 方法，需要在JavaScript端与Android客户端之间建立一个接口。&lt;/p&gt;
&lt;p&gt;如下名为WebAppInterface的类，该类提供了一个名为showToast的本地方法，调用Android Toast通知消息，需要入参；该方法为等待JavaScript调用的方法，必须指定为 public 。&lt;/p&gt;
&lt;p&gt;注意：如果 targetSdkVersion &amp;gt;= 17 ;必须要在为JS设置的方法加上 &lt;strong&gt; @JavascriptInterface &lt;/strong&gt; 的注解；如果没有该注解，那么该方法在Android 4.2及以上的系统中是无法被JS访问到的。&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;WebAppInterface&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Context mContext;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;/** Instantiate the interface and set the context */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		WebAppInterface(Context c) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			mContext = c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;/** Show a toast from the web page */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		@&lt;span class=&quot;function&quot;&gt;JavascriptInterface&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showToast&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;String toast&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			Toast.makeText(mContext, &lt;span class=&quot;string&quot;&gt;&quot;Hello,&quot;&lt;/span&gt; + toast, Toast.LENGTH_SHORT).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;2-绑定接口&quot;&gt;2.绑定接口&lt;/h4&gt;&lt;p&gt;将该接口绑定到javascript，并指定一个名字，用于在javascript中调用。&lt;/p&gt;
&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;webView.addJavascriptInterface(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WebAppInterface(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;), &lt;span class=&quot;string&quot;&gt;&quot;Android&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样就为运行在WebView中的JavaScript创建了一个名为Android的接口，&lt;/p&gt;
&lt;h4 id=&quot;3-调用&quot;&gt;3.调用&lt;/h4&gt;&lt;p&gt;在javascript中的调用方法如下代码所示，id为btnCallNative的button在点击时后调用名为showAndroidToast的JS方法，并传入参数字符串；showAndroidToast方法体中通过名为Android的接口调用Android端的showToast方法，同时传入参数（注意： &lt;strong&gt; 没有必要 &lt;/strong&gt; 再在javascript中对 “Android”  进行初始化，步骤2中webView已自动完成此工作）：&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;actionscript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showAndroidToast&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(toast)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           Android.showToast(toast);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;btnCallNative&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;onclick&lt;/span&gt; = &quot;&lt;span class=&quot;attribute&quot;&gt;showAndroidToast&lt;/span&gt;(&#39;&lt;span class=&quot;attribute&quot;&gt;javascript&lt;/span&gt;&#39;)&quot;&amp;gt;&lt;/span&gt;JS call Native&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;WebView页面导航处理&quot;&gt;WebView页面导航处理&lt;/h2&gt;&lt;p&gt;当你在WebView中点击其他链接时，系统默认会去启动一个默认浏览器（或弹出选择）去处理这个URL请求。大多数情况下这都不符合需求场景，我们可以通过创建自定义的 &lt;strong&gt; WebViewClient &lt;/strong&gt; 来修改这个规则，让用户的前进或者后退操作都在这个WebView内进行，或者打开其他程序来处理。&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyWebViewClient&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;WebViewClient&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public boolean shouldOverrideUrlLoading(&lt;span class=&quot;type&quot;&gt;WebView&lt;/span&gt; view, &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; url) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;Uri&lt;/span&gt;.parse(url).getHost().equals(&lt;span class=&quot;string&quot;&gt;&quot;www.example.com&quot;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// This is my web site, so do not override; let my WebView load the page&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Otherwise, the link is not for a page on my site, so launch another Activity that handles URLs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Intent&lt;/span&gt; intent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Intent&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;Intent&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;ACTION_VIEW&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;Uri&lt;/span&gt;.parse(url));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        startActivity(intent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上代码定义了一个名为MyWebViewClient的类，继承字WebViewClient，通过重写shouldOverrideUrlLoading方法来进行url路由操作；为了数据安全，建议在app的WebView中只加载该app自有的主机链接；对于其他不能确定安全性的链接在交给系统中其他程序处理。&lt;/p&gt;
&lt;p&gt;然后为WebView初始化一个WebViewClient实例：&lt;/p&gt;
&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;webView.setWebViewClient(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MyWebViewClient());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;WebView历史导航&quot;&gt;WebView历史导航&lt;/h2&gt;&lt;p&gt;如果WebView重新加载了其他的URL，那么它会自动累加保存一个页面历史记录。可以通过 goBack() 和 goForward() 方法来进行历史导航。&lt;br&gt;如下代码，在activity中重写onKeyDown方法来处理返回按键的逻辑，其中 canGoBack() 用来判断是否还有历史页面可以返回，类似的还有 canGoForward()。如果用户按下返回键且存在可返回的历史页面，WebView回退到上一个历史页面。&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onKeyDown&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; keyCode, KeyEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Check if the key event was the Back button and if there&#39;s history&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((keyCode == KeyEvent.KEYCODE_BACK) &amp;amp;&amp;amp; myWebView.canGoBack()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        myWebView.goBack();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// If it wasn&#39;t the Back key or there&#39;s no web page history, bubble up to the default&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// system behavior (probably exit the activity)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;onKeyDown&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(keyCode, event)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;参考资料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mthli.github.io/Android-WebView-JavaScript&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android WebView 与 JavaScript 交互&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.android.com/intl/zh-cn/guide/webapps/webview.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Building Web Apps in WebView&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在Android项目开发中，WebView的使用都是必不可少的。在一个基本功能完备的项目中，都会把WebView提取成一个公用的Activity组件，在需要跳转到H5页面的地方启动这个activity并传入相关参数即可。这样的简便快捷的使用，却容易造成开发者对WebView相关知识的疏忽。遂成此文，整理一二。&lt;/p&gt;
    
    </summary>
    
      <category term="Blog" scheme="http://hellopony.cn/categories/Blog/"/>
    
    
  </entry>
  
  <entry>
    <title>SpannableString.setSpan 非常规探索</title>
    <link href="http://hellopony.cn/2016/07/22/SpannableString.setSpan%20%E9%9D%9E%E5%B8%B8%E8%A7%84%E6%8E%A2%E7%B4%A2/"/>
    <id>http://hellopony.cn/2016/07/22/SpannableString.setSpan 非常规探索/</id>
    <published>2016-07-21T16:00:00.000Z</published>
    <updated>2016-07-22T10:37:40.000Z</updated>
    
    <content type="html">&lt;p&gt;SpannableString或SpannableStringBuilder可以通过SetSpan()方法对一个字符串对象的不同部分设置不同的样式信息，这个想必是人人皆知的。但看似简单的用法，其实里面也有一些小小的算不上坑的坑。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;SpannableString&quot;&gt;SpannableString&lt;/h2&gt;&lt;p&gt;SpannableString或SpannableStringBuilder可以通过SetSpan()方法对一个字符串对象的不同部分设置不同的样式信息，这个想必是人人皆知的，like this:&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;String testString = &lt;span class=&quot;string&quot;&gt;&quot;0123456789&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SpannableString spannableString = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpannableString(testString);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spannableString.setSpan(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StyleSpan(Typeface.BOLD), &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, Spanned.SPAN_INCLUSIVE_EXCLUSIVE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spannableString.setSpan(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; UnderlineSpan(), &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, spannableString.length(), Spanned.SPAN_INCLUSIVE_EXCLUSIVE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spanTv.setText(spannableString);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码的运行效果就是“0123”加粗显示，“456789”下划线显示，酱紫: &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7u2h4k.com1.z0.glb.clouddn.com/device-2016-07-22-182058-1.png&quot; alt=&quot;device-2016-07-22-182058-w193&quot;&gt;&lt;/p&gt;
&lt;p&gt;看似简单的用法，其实里面也有一些小小的算不上坑的坑。&lt;/p&gt;
&lt;h2 id=&quot;setSpan方法&quot;&gt;setSpan方法&lt;/h2&gt;&lt;p&gt;SpannableString实现了Spannable接口，该接口定义了两个方法，除了setSpan( )还有removeSpan( )。先看下setSpan( )这个方法：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;void setSpan (Object what, int start, int end, int flags)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.android.com/reference/android/text/Spannable.html#setSpan(java.lang.Object, int, int, int&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方解释&lt;/a&gt;)也比较简单，总结为一句话，就是对start~end之间的text附加特定的标记对象（markup object)，这个对象通常是&lt;a href=&quot;https://developer.android.com/reference/android/text/style/CharacterStyle.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CharacterStyle&lt;/a&gt;，&lt;a href=&quot;https://developer.android.com/reference/android/text/style/ParagraphStyle.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ParagraphStyle&lt;/a&gt;，&lt;a href=&quot;https://developer.android.com/reference/android/text/TextWatcher.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TextWatcher&lt;/a&gt;，&lt;a href=&quot;https://developer.android.com/reference/android/text/SpanWatcher.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SpanWatcher&lt;/a&gt;的子类。（PS：本例使用了StyleSpan和UnderlineSpan均为CharacterStyle的子类，还有各种各样的Span及用法可自行发掘，不在本文讨论范围之内）。官方文档中并没有对参数进行一一解释，可能是觉得太过显而易见？只是在方法说明中带了一嘴：去 Spanned查看各个flags的意义。&lt;br&gt;简单解释一下参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Object what: 对应各种Span&lt;/li&gt;
&lt;li&gt;int start: 指定的Span开始应用的位置索引&lt;/li&gt;
&lt;li&gt;int end: 指定的Span结束应用的位置索引&lt;/li&gt;
&lt;li&gt;int flags: &lt;strong&gt;现在只知道是一个标识&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;刚开始使用SpannableString的时候，看到setSpan( )这个方法，会不由自主的理解为，这个里的flags是用来标识要设置Span的起始位置start…end的，很多博客在没有调查清楚的时候也是这么误导读者的，清一色的SPAN_INCLUSIVE_EXCLUSIVE用法。一个偶然的机会，我改了这个参数，发现对于显示效果没有任何的影响，一度以为自己出现了幻觉。&lt;/p&gt;
&lt;h2 id=&quot;关于flags&quot;&gt;关于flags&lt;/h2&gt;&lt;p&gt;通过查阅接口&lt;a href=&quot;https://developer.android.com/reference/android/text/Spanned.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Spanned&lt;/a&gt;文档，flags标识对于text处理常用的有以下几种常量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spanned.SPAN_EXCLUSIVE_EXCLUSIVE：前开后开（do not expand to include text inserted at either their starting or ending point）&lt;/li&gt;
&lt;li&gt;Spanned.SPAN_EXCLUSIVE_INCLUSIVE：前开后闭（expand to include text inserted at their ending point but not at their starting point）&lt;/li&gt;
&lt;li&gt;Spanned.SPAN_INCLUSIVE_EXCLUSIVE：前闭后开（expand to include text inserted at their starting point but not at their ending point）&lt;/li&gt;
&lt;li&gt;Spanned.SPAN_INCLUSIVE_INCLUSIVE：前闭后闭（expand to include text inserted at either their starting or ending point）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;贴上原文，方便感受一下这些flag的真是含义：对于在起点前或者终点后 &lt;strong&gt;插入的（inserted at)&lt;/strong&gt; 文本 扩展/不扩展 应用Span。&lt;/p&gt;
&lt;p&gt;恍然大悟，这个flags并不是标识我们在构造SpannableString或者SpannableStringBuilder时传入的String Object，而是针对在setSpan( )之后附加到 start 之前 或者 end 之后的文本，是否沿用Span。&lt;/p&gt;
&lt;h2 id=&quot;场景一&quot;&gt;场景一&lt;/h2&gt;&lt;p&gt;什么情况下可以在setSpan( )之后可以在insert text呢？SpannableString对象和String一样，是不可变对象，那SpannableStringBuilder就和StringBuilder一样是可变的了。新发现一定要试试：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;String testString = &lt;span class=&quot;string&quot;&gt;&quot;0123456789&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SpannableStringBuilder spannableStringBuilder = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpannableStringBuilder(testString);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spannableStringBuilder.setSpan(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StyleSpan(Typeface.BOLD), &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, Spanned.SPAN_INCLUSIVE_EXCLUSIVE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spannableStringBuilder.setSpan(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; UnderlineSpan(), &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, spannableString.length(), Spanned.SPAN_INCLUSIVE_EXCLUSIVE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spannableStringBuilder.insert(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;begin&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spannableStringBuilder.append(&lt;span class=&quot;string&quot;&gt;&quot;end&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spanTv.setText(spannableStringBuilder);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;基本设置与前例一致，不同在于，在SpannableStringBuilder设置Span之后，分别在头部和尾部插入了两个字符串文本。由于[0,4)前闭后开，“begin”沿用加粗的Span；而[4,9)也是前闭后开，附加在最后的”end”则不沿用任何Span，酱紫：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7u2h4k.com1.z0.glb.clouddn.com/device-2016-07-22-181947.png&quot; alt=&quot;device-2016-07-22-181947-w268&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;场景二&quot;&gt;场景二&lt;/h2&gt;&lt;p&gt;再想，如果在代码中去手动insert、append特定文本到特定的位置，那直接在构造的时候就传进去岂不是更方便？似乎不是一个很通用的应用场景。那什么场景可以灵活的在文本的前后中间随意插入呢？ &lt;strong&gt;EditText&lt;/strong&gt;文本输入框。&lt;br&gt;上栗子：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;String testString = &lt;span class=&quot;string&quot;&gt;&quot;0123456789&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SpannableString spannableString = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpannableString(testString);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spannableString.setSpan(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ForegroundColorSpan(ContextCompat.getColor(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, R.color.colorGreen)), &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, spannableString.length(), Spanned.SPAN_INCLUSIVE_EXCLUSIVE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inputEt.setText(spannableString);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在“0”之前输入”begin“，在”9“之后输入“end”，酱紫：&lt;br&gt;&lt;img src=&quot;http://7u2h4k.com1.z0.glb.clouddn.com/device-2016-07-22-163752.png&quot; alt=&quot;device-2016-07-22-163752-w335&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;后记&quot;&gt;后记&lt;/h2&gt;&lt;p&gt;至此终于搞清楚了setSpan( )中flags参数的真实含义，过程略绕，因为SpannableString的官方文档对与setSpan( )并没有做任何说明，接口Spannable也只是对该方法的意义略做解释，而flags参数的真正含义却要挖到Spanned接口中对常量的解释。写此文的过程中，发现在SpannableStringBuilder的文档中对该方法有一句话说明：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Mark the specified range of text with the specified object. The flags determine how the span will behave when text is inserted at the start or end of the span’s range.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其对 flags 进行了解释，就是不知道为什么这句话没有出现在SpannableString的文档中。&lt;/p&gt;
&lt;p&gt;日常使用没有 &lt;strong&gt;insert&lt;/strong&gt; 需求时，flags只需传 &lt;strong&gt;0&lt;/strong&gt; 即可。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;SpannableString或SpannableStringBuilder可以通过SetSpan()方法对一个字符串对象的不同部分设置不同的样式信息，这个想必是人人皆知的。但看似简单的用法，其实里面也有一些小小的算不上坑的坑。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Retrofit Doc 译</title>
    <link href="http://hellopony.cn/2016/04/05/Retrofit%20Doc%20%E8%AF%91/"/>
    <id>http://hellopony.cn/2016/04/05/Retrofit Doc 译/</id>
    <published>2016-04-04T16:00:00.000Z</published>
    <updated>2016-04-05T10:10:25.000Z</updated>
    
    <content type="html">&lt;p&gt;为加深对Retrofit网络请求框架的理解，遂将官网Doc通读一遍并翻译成中文。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;引言&quot;&gt;引言&lt;/h2&gt;&lt;p&gt;Retrofit将你的HTTP API换成Java接口。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GitHubService&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;annotation&quot;&gt;@GET&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;users/&amp;#123;user&amp;#125;/repos&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Call&amp;lt;List&amp;lt;Repo&amp;gt;&amp;gt; listRepos(&lt;span class=&quot;annotation&quot;&gt;@Path&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;user&quot;&lt;/span&gt;) String user);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Retrofit&lt;/strong&gt; 类生成一个 &lt;strong&gt;GitHubService&lt;/strong&gt; 接口的实例。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Retrofit retrofit = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Retrofit.Builder()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .baseUrl(&lt;span class=&quot;string&quot;&gt;&quot;https://api.github.com/&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GitHubService service = retrofit.create(GitHubService.class);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;GitHubService&lt;/strong&gt; 中的每一个 &lt;strong&gt;Call&lt;/strong&gt; 都可以用来创建同步或者异步的HTTP请求。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Call&amp;lt;List&amp;lt;Repo&amp;gt;&amp;gt; repos = service.listRepos(&lt;span class=&quot;string&quot;&gt;&quot;octocat&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用注解(annotations)的方式来来描述一个HTTP请求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持URL参数替换和查询参数&lt;/li&gt;
&lt;li&gt;对象转换为请求body (例如 JSON，protocol buffers)&lt;/li&gt;
&lt;li&gt;多请求体和文件上传&lt;br&gt;&lt;em&gt;Note：&lt;/em&gt; 后续新版2.0的API扩展仍在进行中。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;API_说明&quot;&gt;API 说明&lt;/h2&gt;&lt;p&gt;接口中方法以及其参数的注解用于表明这个请求会被处理的方式。&lt;/p&gt;
&lt;h4 id=&quot;请求方法&quot;&gt;请求方法&lt;/h4&gt;&lt;p&gt;每个方法都必须有一个声明了请求类型和相对URL地址的HTTP注解，内置支持五种类型注解：&lt;strong&gt;GET，POST，PUT，DELETE，HEAD&lt;/strong&gt;，相对URL地址在注解中进行指定。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@GET&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;users/list&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也可以直接在URL中写请求参数。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@GET&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;users/list?sort=desc&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;URL操作&quot;&gt;URL操作&lt;/h4&gt;&lt;p&gt;通过在方法中使用替换块和参数，可以实现请求URL地址的动态更新。一个替换块(replacement block)是一个由花括号“{…}”包裹的字符串，与之通信的参数必须使用 &lt;strong&gt;@Path&lt;/strong&gt; 注解相同的字符串。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@GET&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;group/&amp;#123;id&amp;#125;/users&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Call&amp;lt;List&amp;lt;User&amp;gt;&amp;gt; groupList(&lt;span class=&quot;annotation&quot;&gt;@Path&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; groupId);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同时也可以添加查询参数&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@GET&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;group/&amp;#123;id&amp;#125;/users&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Call&amp;lt;List&amp;lt;User&amp;gt;&amp;gt; groupList(&lt;span class=&quot;annotation&quot;&gt;@Path&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; groupId, &lt;span class=&quot;annotation&quot;&gt;@Query&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;sort&quot;&lt;/span&gt;) String sort);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更复杂的参数组合可以使用 &lt;strong&gt;Map&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@GET&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;group/&amp;#123;id&amp;#125;/users&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Call&amp;lt;List&amp;lt;User&amp;gt;&amp;gt; groupList(&lt;span class=&quot;annotation&quot;&gt;@Path&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; groupId, &lt;span class=&quot;annotation&quot;&gt;@QueryMap&lt;/span&gt; Map&amp;lt;String, String&amp;gt; options);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;请求体（Request_Body)&quot;&gt;请求体（Request Body)&lt;/h4&gt;&lt;p&gt;使用 &lt;strong&gt;@Body&lt;/strong&gt; 注解来指定一个对象，用作HTTP请求体。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@POST&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;users/new&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;Call&amp;lt;User&amp;gt; &lt;span class=&quot;title&quot;&gt;createUser&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@Body User user)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该对象也会被 &lt;strong&gt;Retrofit&lt;/strong&gt; 实例中指定的转换器(Converter)进行转换。如果没有指定转换器，则只能使用 &lt;strong&gt;RequestBody&lt;/strong&gt; 。&lt;/p&gt;
&lt;h4 id=&quot;表单数据及操作&quot;&gt;表单数据及操作&lt;/h4&gt;&lt;p&gt;可以声明方法来发送表单以及多请求体数据。&lt;br&gt;当方法上出现 &lt;strong&gt;@FormUrlEncoded&lt;/strong&gt; 时会发送表单形式的数据，键值对通过 &lt;strong&gt;Field&lt;/strong&gt; 注解来声明。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@FormUrlEncoded&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@POST&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;user/edit&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;Call&amp;lt;User&amp;gt; &lt;span class=&quot;title&quot;&gt;updateUser&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@Field(&lt;span class=&quot;string&quot;&gt;&quot;first_name&quot;&lt;/span&gt;)&lt;/span&gt; String first, @&lt;span class=&quot;title&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;last_name&quot;&lt;/span&gt;)&lt;/span&gt; String last)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当方法上出现 &lt;strong&gt;@Multipart&lt;/strong&gt; 时会以多请求体的形式发送数据。每一部分使用 &lt;strong&gt;@Part&lt;/strong&gt; 注解。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Multipart&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@PUT&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;user/photo&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;Call&amp;lt;User&amp;gt; &lt;span class=&quot;title&quot;&gt;updateUser&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@Part(&lt;span class=&quot;string&quot;&gt;&quot;photo&quot;&lt;/span&gt;)&lt;/span&gt; RequestBody photo, @&lt;span class=&quot;title&quot;&gt;Part&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;description&quot;&lt;/span&gt;)&lt;/span&gt; RequestBody description)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此部分需要使用 &lt;strong&gt;Retrofit&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;请求头部操作&quot;&gt;请求头部操作&lt;/h4&gt;&lt;p&gt;可以使用 &lt;strong&gt;@Header&lt;/strong&gt; 注解为每一个方法设置静态请求头部。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Headers&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Cache-Control: max-age=640000&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@GET&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;widget/list&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Call&amp;lt;List&amp;lt;Widget&amp;gt;&amp;gt; widgetList();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Headers&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;Accept: application/vnd.github.v3.full+json&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;User-Agent: Retrofit-Sample-App&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@GET&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;users/&amp;#123;username&amp;#125;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;Call&amp;lt;User&amp;gt; &lt;span class=&quot;title&quot;&gt;getUser&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@Path(&lt;span class=&quot;string&quot;&gt;&quot;username&quot;&lt;/span&gt;)&lt;/span&gt; String username)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意：请求头部之间不会被重写，所有相同名字的Header都会被包含到请求中。&lt;br&gt;请求头部可以通过 &lt;strong&gt;Header&lt;/strong&gt; 注解来进行动态更新，如果参数的对象值为null，该头部将会被忽略；否则会调用 &lt;strong&gt;toString()&lt;/strong&gt; 方法来取得值。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@GET&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;user&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;Call&amp;lt;User&amp;gt; &lt;span class=&quot;title&quot;&gt;getUser&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@Header(&lt;span class=&quot;string&quot;&gt;&quot;Authorization&quot;&lt;/span&gt;)&lt;/span&gt; String authorization)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;每个请求都使用的头部Header可以使用&lt;a href=&quot;https://github.com/square/okhttp/wiki/Interceptors&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OkHttp interceptor&lt;/a&gt;来指定&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;同步_VS_异步&quot;&gt;同步 VS 异步&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Call&lt;/strong&gt; 的实例既可以同步执行，也可以异步执行；每个实例只能使用一次，可以调用 &lt;strong&gt;clone()&lt;/strong&gt; 方法来创建一个新的实例使用。&lt;br&gt;在Android上，回调(callbacks)会在主线程中执行；在JVM中，回调会在执行HTTP请求的线程中执行。&lt;/p&gt;
&lt;h2 id=&quot;Retrofit_配置&quot;&gt;Retrofit 配置&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Retrofit&lt;/strong&gt; 是一个可以把你的API接口转换成可被调用的对象的类。默认情况下，Retrofit会为你的平台提供合理的默认配置，同时它也支持自定义配置。&lt;/p&gt;
&lt;h4 id=&quot;转换器(Converters)&quot;&gt;转换器(Converters)&lt;/h4&gt;&lt;p&gt;默认情况下，Retrofit只能将HTTP请求体反序列化成OkHttp的 &lt;strong&gt;RetrofitBody&lt;/strong&gt; 类型，而且 &lt;strong&gt;@Body&lt;/strong&gt; 也只接受 &lt;strong&gt;RetrofitBody&lt;/strong&gt; 类型。&lt;br&gt;添加转化器可以支持其他的类型。为了方便使用，以下六个流行的序列化库已被支持(retrofit 2)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/google/gson&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gson&lt;/a&gt;&lt;/strong&gt; : com.squareup.retrofit2:converter-gson&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://wiki.fasterxml.com/JacksonHome&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Jackson&lt;/a&gt;&lt;/strong&gt; : com.squareup.retrofit2:converter-jackson&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/square/moshi/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Moshi&lt;/a&gt;&lt;/strong&gt; : com.squareup.retrofit2:converter-moshi&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://developers.google.com/protocol-buffers/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ProtocolBuf&lt;/a&gt;&lt;/strong&gt; : com.squareup.retrofit2:converter-protobuf&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/square/wire&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Wire&lt;/a&gt;&lt;/strong&gt; : com.squareup.retrofit2:converter-wire&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://simple.sourceforge.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Simple XML&lt;/a&gt;&lt;/strong&gt; : com.squareup.retrofit2:converter-simplexml&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个使用 &lt;strong&gt;GsonConverterFactory&lt;/strong&gt; 类来生成 &lt;strong&gt;GitHubService&lt;/strong&gt; 实例的例子。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Retrofit retrofit = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Retrofit.Builder()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .baseUrl(&lt;span class=&quot;string&quot;&gt;&quot;https://api.github.com&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addConverterFactory(GsonConverterFactory.create())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GitHubService service = retrofit.create(GitHubService.class);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;自定义转化器&quot;&gt;自定义转化器&lt;/h4&gt;&lt;p&gt;如果与API的通信使用了Retrofit不支持的格式的内容，或者希望使用一个不同序列化库，那么就需要创建一个自定义的Converter。集成 &lt;strong&gt;Converter.Factory&lt;/strong&gt; 类创建一个新类，并且在build Retrofit的时候传入该类的实例。&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;参考资料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;译自&lt;a href=&quot;http://square.github.io/retrofit/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Retrofit官网&lt;/a&gt; (翻译官方Doc时的Retrofit版本为2.0.1，一切更新以官网为准)&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;为加深对Retrofit网络请求框架的理解，遂将官网Doc通读一遍并翻译成中文。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Genymotion模拟器错误的解决</title>
    <link href="http://hellopony.cn/2016/04/01/genymotion-arm-translation/"/>
    <id>http://hellopony.cn/2016/04/01/genymotion-arm-translation/</id>
    <published>2016-04-01T06:32:32.000Z</published>
    <updated>2016-04-01T06:32:32.000Z</updated>
    
    <content type="html">&lt;p&gt;Android模拟器界Genymotion久负盛名，由于以前开发过程中都是真机调试，装的Genymotion也就是体验一下，并没有真正用来开发。这两天Mac的USB接口告急，决定开发调试转Genymotion来进行。但是就在安装的时候就遇到了错误”[INSTALL_FAILED_NO_MATCHING_ABIS]”导致app无法install，一番折腾之后总算是通过了，总结一下。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;起因&quot;&gt;起因&lt;/h2&gt;&lt;h3 id=&quot;错误代码：[INSTALL_FAILED_NO_MATCHING_ABIS]&quot;&gt;错误代码：[INSTALL_FAILED_NO_MATCHING_ABIS]&lt;/h3&gt;&lt;p&gt;一番搜索之后，定位到了错误原因：项目中”armeabi/“和”armeabi-v7a/“中引用到了一些.so库，但是Genymotion的System Image是基于Intel x86架构，往一个x86架构的系统中安装含有基于arm架构本地库的APP是注定要失败的。网上已经有了一些很不错的讨论：&lt;a href=&quot;http://stackoverflow.com/questions/7080525/why-use-armeabi-v7a-code-over-armeabi-code&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;StackOverflow&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;解决方案&quot;&gt;解决方案&lt;/h2&gt;&lt;p&gt;在模拟器系统中安装Translation库。&lt;/p&gt;
&lt;h3 id=&quot;4-x&quot;&gt;4.x&lt;/h3&gt;&lt;p&gt;模拟器系统为4.x的解决方案可以参考这篇博客：&lt;a href=&quot;http://blog.csdn.net/wjr2012/article/details/16359113&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;4.x方案&lt;/a&gt;&lt;br&gt;PS：此博客更新中说可以解决在5.1上的问题，但结合评论的反馈，以及我的实测，此方案在5.x（5.0，5.1）上无效。&lt;/p&gt;
&lt;h3 id=&quot;5-x&quot;&gt;5.x&lt;/h3&gt;&lt;p&gt;以上方案在5.x上并没有效果，所以又一番墙外搜索，找到了这篇博客：&lt;a href=&quot;http://23pin.logdown.com/posts/294446-genymotion-use-arm-translation-on-5x-image&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Use ARM Translation on 5.x image&lt;/a&gt;，Problem Solved！看作者的文风，应该是港澳台同胞（膜拜大神ing），可以直接去看原文，或者直接看下面的解决步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Genymotion中新建5.0或5.1的模拟器&lt;/li&gt;
&lt;li&gt;把&lt;a href=&quot;https://mega.nz/#!Iw1HRLxR!8zVOQ84uk2hpxgsRrsHfp-wsbKOUvupHLJyWqWzPiUg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ARM_Translation_Lollipop.zip&lt;/a&gt;拖进模拟器窗口，OK，自动安装&lt;/li&gt;
&lt;li&gt;安装完成先不要着急关闭/重启模拟器（不同于4.x），执行命令：&lt;code&gt;adb shell /system/etc/houdini_patcher.sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;完成后重启模拟器&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;后记&quot;&gt;后记&lt;/h3&gt;&lt;p&gt;以上两种方案应该能解决绝大部分人的问题了，再次感谢两位博客原作者。顺带安利一下，Genymotion确实是“目前”东西半球加起来最顺滑的模拟器啊没有之一。不过 Android Studio 2.0 已经发布到Preview 4了，最最最重要的是，全新的模拟器很逆天，据说Google自己说很好用，速度提升50倍!!!详细信息看这里：&lt;a href=&quot;http://android-developers.blogspot.jp/2015/11/android-studio-20-preview.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Studio 2.0 Preview&lt;/a&gt;。不过因为是工作环境，还没敢升级到Preview去尝试，十分期待稳定版!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Android模拟器界Genymotion久负盛名，由于以前开发过程中都是真机调试，装的Genymotion也就是体验一下，并没有真正用来开发。这两天Mac的USB接口告急，决定开发调试转Genymotion来进行。但是就在安装的时候就遇到了错误”[INSTALL_FAILED_NO_MATCHING_ABIS]”导致app无法install，一番折腾之后总算是通过了，总结一下。&lt;/p&gt;
    
    </summary>
    
      <category term="Blog" scheme="http://hellopony.cn/categories/Blog/"/>
    
    
  </entry>
  
  <entry>
    <title>Android Debug Bridge(adb) 以及 WIFI调试</title>
    <link href="http://hellopony.cn/2016/04/01/Android_Debug_Bridge/"/>
    <id>http://hellopony.cn/2016/04/01/Android_Debug_Bridge/</id>
    <published>2016-04-01T03:52:58.000Z</published>
    <updated>2016-04-01T03:52:58.000Z</updated>
    
    <content type="html">&lt;p&gt;Android Debug Bridge (ADB) 是一个非常有用的命令行工具，可以通过它与模拟器或者已连接的设备进行通信。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;本质上它是一个 &lt;strong&gt;Client-Server&lt;/strong&gt; 程序，包含三个部分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Client&lt;/strong&gt;，客户端程序，运行在开发环境，可以通过任意的命令行工具执行adb命令来操作Client。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server&lt;/strong&gt;，服务端程序没，运行在开发环境的一个后台进程，它负责管理Client和模拟器或真机设备上的adb守护进程之间的通信。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Daemon&lt;/strong&gt;，守护进程，运行在模拟器或Android真机设备的后台。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;ADB工具位于 {sdk}/platform-tools/&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;打开一个adb Client之后，客户端程序会首先检查adb服务端进程是否正在运行。如果没有，先启动之。服务端程序启动之后会绑定到本地端口5037，监听Client发出的命令（所有的adb Client与Server的通信均通过5037端口进行）。然后 Server会与所有的模拟器或真机建立连接，之后就可以通过adb命令来控制所有的实例了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在使用adb之前，确保模拟器或真机已开启 “USB调试（USB debugging）”&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;语法&quot;&gt;语法&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb [&lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt;|&lt;span class=&quot;operator&quot;&gt;-e&lt;/span&gt;|&lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; &amp;lt;serialNumber&amp;gt;] &amp;lt;&lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果仅有一个模拟器或真机设备连接，adb 命令会默认发送到这个设备。如果有多个，就需要通过 “-d|-e|-s &lt;serialnumber&gt;”参数来限定命令的目标设备。&lt;/serialnumber&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;-d ：直接发送到通过USB连接的设备&lt;/li&gt;
&lt;li&gt;-e ：直接发送到模拟器&lt;/li&gt;
&lt;li&gt;-s [serialNumber] ：发送到指定序列号的设备&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;常用命令&quot;&gt;常用命令&lt;/h2&gt;&lt;h3 id=&quot;查看连接设备&quot;&gt;查看连接设备&lt;/h3&gt;&lt;p&gt;输出格式：[serialNumber] [state]&lt;/p&gt;
&lt;figure class=&quot;highlight capnproto&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ adb devices&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; devices attached&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;emulator-&lt;span class=&quot;number&quot;&gt;5554&lt;/span&gt;  device&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;953756558&lt;/span&gt;  device&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;安装app&quot;&gt;安装app&lt;/h3&gt;&lt;p&gt;如果有多台设备连接，需要参数 “-d|-e|-s &lt;serialnumber&gt;”&lt;/serialnumber&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ adb install &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;path_to_apk&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;卸载app&quot;&gt;卸载app&lt;/h3&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb unstall &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;package_name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;清除应用数据&quot;&gt;清除应用数据&lt;/h3&gt;&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb &lt;span class=&quot;built_in&quot;&gt;shell&lt;/span&gt; pm &lt;span class=&quot;built_in&quot;&gt;clear&lt;/span&gt; &amp;lt;package_name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;导出文件&quot;&gt;导出文件&lt;/h3&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb pull &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;remote&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;local&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;导入文件&quot;&gt;导入文件&lt;/h3&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb push &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;local&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;remote&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;查看栈顶Activity&quot;&gt;查看栈顶Activity&lt;/h3&gt;&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb &lt;span class=&quot;built_in&quot;&gt;shell&lt;/span&gt; dumpsys activity top&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;查看所有安装应用的包名&quot;&gt;查看所有安装应用的包名&lt;/h3&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb &lt;span class=&quot;keyword&quot;&gt;shell&lt;/span&gt; pm &lt;span class=&quot;keyword&quot;&gt;list&lt;/span&gt; packages -&lt;span class=&quot;literal&quot;&gt;f&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;查看Activity_Manager_State&quot;&gt;查看Activity Manager State&lt;/h3&gt;&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb &lt;span class=&quot;built_in&quot;&gt;shell&lt;/span&gt; dumpsys activity&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;关闭服务端&quot;&gt;关闭服务端&lt;/h3&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb &lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;kill&lt;/span&gt;-&lt;span class=&quot;keyword&quot;&gt;server&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;ADB的无线调试&quot;&gt;ADB的无线调试&lt;/h2&gt;&lt;h3 id=&quot;通过WIFI连接设备进行调试：&quot;&gt;通过WIFI连接设备进行调试：&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;确保Android设备和开发电脑在同一个WIFI网络内&lt;/li&gt;
&lt;li&gt;通过USB将Android设备连接到电脑&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置目标设备监听TCP/IP的5555端口&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ adb tcpip &lt;span class=&quot;number&quot;&gt;5555&lt;/span&gt;        
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;断开USB连接&lt;/li&gt;
&lt;li&gt;查询Android设备的IP地址&lt;/li&gt;
&lt;li&gt;&lt;p&gt;根据IP地址连接目标设备&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ adb connnet &amp;lt;device-&lt;span class=&quot;literal&quot;&gt;ip&lt;/span&gt;-&lt;span class=&quot;keyword&quot;&gt;address&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;确认目标设备的连接情况&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ adb device
&lt;span class=&quot;label&quot;&gt;List&lt;/span&gt; of devices attached
&amp;lt;device-&lt;span class=&quot;literal&quot;&gt;ip&lt;/span&gt;-&lt;span class=&quot;keyword&quot;&gt;address&amp;gt;:5555 &lt;/span&gt; device
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;连接完成。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;如果adb连接被断开了：&quot;&gt;如果adb连接被断开了：&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;确保电脑和Android设备还处在同一WIFI网络内&lt;/li&gt;
&lt;li&gt;从 &lt;strong&gt;步骤6&lt;/strong&gt; 开始进行重连，执行 adb connnet&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果无效，关闭 adb server&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;adb &lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;kill&lt;/span&gt;-&lt;span class=&quot;keyword&quot;&gt;server&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后 &lt;strong&gt;重新执行连接&lt;/strong&gt; 操作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;参考资料&quot;&gt;参考资料&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://developer.android.com/intl/zh-cn/tools/help/adb.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Android Debug Bridge (ADB) 是一个非常有用的命令行工具，可以通过它与模拟器或者已连接的设备进行通信。&lt;/p&gt;
    
    </summary>
    
      <category term="Blog" scheme="http://hellopony.cn/categories/Blog/"/>
    
    
  </entry>
  
</feed>
